[22/08/21 19:12:08] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 19:12:08] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 0
  TYPE: ['gaussian_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: gce_NO-OOD_22-08-21_191208_672795_gaus.txt
LOG_TIME: 22-08-21_191208_672795
MODEL:
  ADAPTATION: gce
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.8
N_EPOCHS: 5
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 19:12:18] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 9.6071s
[22/08/21 19:12:18] [cifar10c.py:  164]: test-time adaptation: GCE
[22/08/21 19:12:18] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 19:12:18] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 19:12:18] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0003
    weight_decay: 0.0
)
[22/08/21 19:12:18] [cifar10c.py:  184]: resetting model
[22/08/21 19:12:18] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0032s
[22/08/21 19:12:18] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2792s
[22/08/21 19:14:08] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.5844s
[22/08/21 19:14:08] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise1]: 11.72%
[22/08/21 19:14:08] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.285s
[22/08/21 19:15:57] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4074s
[22/08/21 19:15:57] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise1]: 11.27%
[22/08/21 19:15:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2901s
[22/08/21 19:17:47] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.326s
[22/08/21 19:17:47] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise1]: 11.34%
[22/08/21 19:17:47] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.3135s
[22/08/21 19:19:37] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.3462s
[22/08/21 19:19:37] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise1]: 11.21%
[22/08/21 19:19:37] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2807s
[22/08/21 19:21:26] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4106s
[22/08/21 19:21:26] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise1]: 11.19%
[22/08/21 19:21:26] [cifar10c.py:  184]: resetting model
[22/08/21 19:21:26] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 19:21:27] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2809s
[22/08/21 19:23:16] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.353s
[22/08/21 19:23:16] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise2]: 16.22%
[22/08/21 19:23:16] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2805s
[22/08/21 19:25:06] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4159s
[22/08/21 19:25:06] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise2]: 15.37%
[22/08/21 19:25:06] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2841s
[22/08/21 19:26:55] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.3908s
[22/08/21 19:26:56] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise2]: 15.40%
[22/08/21 19:26:56] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2763s
[22/08/21 19:28:45] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.3387s
[22/08/21 19:28:45] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise2]: 15.22%
[22/08/21 19:28:45] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.3161s
[22/08/21 19:30:35] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.3856s
[22/08/21 19:30:35] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise2]: 14.96%
[22/08/21 19:30:35] [cifar10c.py:  184]: resetting model
[22/08/21 19:30:35] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0044s
[22/08/21 19:30:35] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.3129s
[22/08/21 19:32:25] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4635s
[22/08/21 19:32:25] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise3]: 21.52%
[22/08/21 19:32:25] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.3017s
[22/08/21 19:34:14] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4604s
[22/08/21 19:34:14] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise3]: 21.17%
[22/08/21 19:34:15] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2755s
[22/08/21 19:36:04] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4484s
[22/08/21 19:36:04] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise3]: 20.71%
[22/08/21 19:36:04] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2995s
[22/08/21 19:37:54] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.361s
[22/08/21 19:37:54] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise3]: 20.53%
[22/08/21 19:37:54] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.3082s
[22/08/21 19:39:44] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4413s
[22/08/21 19:39:44] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise3]: 20.45%
[22/08/21 19:39:44] [cifar10c.py:  184]: resetting model
[22/08/21 19:39:44] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0042s
[22/08/21 19:39:44] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.3026s
[22/08/21 19:41:33] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4128s
[22/08/21 19:41:33] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise4]: 24.32%
[22/08/21 19:41:34] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2838s
[22/08/21 19:43:23] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4369s
[22/08/21 19:43:23] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise4]: 23.46%
[22/08/21 19:43:23] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2824s
[22/08/21 19:45:13] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.3765s
[22/08/21 19:45:13] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise4]: 23.17%
[22/08/21 19:45:13] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2799s
[22/08/21 19:47:02] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4759s
[22/08/21 19:47:02] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise4]: 22.79%
[22/08/21 19:47:03] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.285s
[22/08/21 19:48:52] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4174s
[22/08/21 19:48:52] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise4]: 22.73%
[22/08/21 19:48:52] [cifar10c.py:  184]: resetting model
[22/08/21 19:48:52] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 19:48:52] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2857s
[22/08/21 19:50:42] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4955s
[22/08/21 19:50:42] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise5]: 27.34%
[22/08/21 19:50:42] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2736s
[22/08/21 19:52:32] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.3852s
[22/08/21 19:52:32] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise5]: 26.34%
[22/08/21 19:52:32] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2864s
[22/08/21 19:54:21] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4037s
[22/08/21 19:54:21] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise5]: 25.99%
[22/08/21 19:54:22] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2815s
[22/08/21 19:56:11] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.3587s
[22/08/21 19:56:11] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise5]: 25.73%
[22/08/21 19:56:11] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.2873s
[22/08/21 19:58:01] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 109.4058s
[22/08/21 19:58:01] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise5]: 25.73%
