[22/08/21 18:25:45] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 18:25:45] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 100
  SVHN_samples: 0
  TYPE: ['jpeg_compression']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: tent_SVHNC_100_22-08-21_182545_269004_jpeg.txt
LOG_TIME: 22-08-21_182545_269004
MODEL:
  ADAPTATION: tent
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 4
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 18:25:54] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 9.643s
[22/08/21 18:25:54] [cifar10c.py:  161]: test-time adaptation: TENT
[22/08/21 18:25:54] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 18:25:54] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 18:25:54] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0.0
)
[22/08/21 18:25:54] [cifar10c.py:  184]: resetting model
[22/08/21 18:25:54] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0033s
[22/08/21 18:25:55] [cifar10c.py:  229]: OOD_TIME: loading ood data took 1.0175s
[22/08/21 18:28:41] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.5476s
[22/08/21 18:28:41] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression1]: 13.81%
[22/08/21 18:28:42] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7953s
[22/08/21 18:31:26] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 164.2774s
[22/08/21 18:31:26] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression1]: 13.03%
[22/08/21 18:31:27] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.804s
[22/08/21 18:34:11] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 164.5549s
[22/08/21 18:34:11] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression1]: 13.21%
[22/08/21 18:34:12] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7824s
[22/08/21 18:36:57] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.0059s
[22/08/21 18:36:57] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression1]: 12.97%
[22/08/21 18:36:57] [cifar10c.py:  184]: resetting model
[22/08/21 18:36:57] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 18:36:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.728s
[22/08/21 18:39:43] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 164.7712s
[22/08/21 18:39:43] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression2]: 19.59%
[22/08/21 18:39:44] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7636s
[22/08/21 18:42:28] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 164.2644s
[22/08/21 18:42:28] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression2]: 18.71%
[22/08/21 18:42:28] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7009s
[22/08/21 18:45:12] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.9288s
[22/08/21 18:45:12] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression2]: 18.99%
[22/08/21 18:45:13] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7414s
[22/08/21 18:47:57] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.753s
[22/08/21 18:47:57] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression2]: 18.71%
[22/08/21 18:47:57] [cifar10c.py:  184]: resetting model
[22/08/21 18:47:57] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0038s
[22/08/21 18:47:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6921s
[22/08/21 18:50:41] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.7365s
[22/08/21 18:50:41] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression3]: 21.54%
[22/08/21 18:50:42] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6845s
[22/08/21 18:53:26] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.7077s
[22/08/21 18:53:26] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression3]: 20.88%
[22/08/21 18:53:26] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6937s
[22/08/21 18:56:10] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.7015s
[22/08/21 18:56:10] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression3]: 20.77%
[22/08/21 18:56:11] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6947s
[22/08/21 18:58:55] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.6877s
[22/08/21 18:58:55] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression3]: 20.70%
[22/08/21 18:58:55] [cifar10c.py:  184]: resetting model
[22/08/21 18:58:55] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 18:58:55] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7123s
[22/08/21 19:01:39] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.68s
[22/08/21 19:01:39] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression4]: 23.29%
[22/08/21 19:01:40] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7347s
[22/08/21 19:04:23] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.6817s
[22/08/21 19:04:23] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression4]: 22.66%
[22/08/21 19:04:24] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6787s
[22/08/21 19:07:08] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.6648s
[22/08/21 19:07:08] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression4]: 22.59%
[22/08/21 19:07:08] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6936s
[22/08/21 19:09:52] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.6895s
[22/08/21 19:09:52] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression4]: 22.68%
[22/08/21 19:09:52] [cifar10c.py:  184]: resetting model
[22/08/21 19:09:52] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 19:09:53] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7204s
[22/08/21 19:12:36] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.7068s
[22/08/21 19:12:36] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression5]: 25.99%
[22/08/21 19:12:37] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7056s
[22/08/21 19:15:21] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.7286s
[22/08/21 19:15:21] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression5]: 24.57%
[22/08/21 19:15:22] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7113s
[22/08/21 19:18:06] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.9229s
[22/08/21 19:18:06] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression5]: 24.03%
[22/08/21 19:18:06] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7522s
[22/08/21 19:20:50] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.761s
[22/08/21 19:20:50] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression5]: 23.80%
