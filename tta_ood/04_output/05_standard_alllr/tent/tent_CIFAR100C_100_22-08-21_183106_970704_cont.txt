[22/08/21 18:31:07] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 18:31:07] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 100
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 0
  TYPE: ['contrast']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: tent_CIFAR100C_100_22-08-21_183106_970704_cont.txt
LOG_TIME: 22-08-21_183106_970704
MODEL:
  ADAPTATION: tent
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 3
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 18:31:14] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.2461s
[22/08/21 18:31:14] [cifar10c.py:  161]: test-time adaptation: TENT
[22/08/21 18:31:14] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 18:31:14] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 18:31:14] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0003
    weight_decay: 0.0
)
[22/08/21 18:31:14] [cifar10c.py:  184]: resetting model
[22/08/21 18:31:14] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0032s
[22/08/21 18:31:15] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.977s
[22/08/21 18:34:01] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.2955s
[22/08/21 18:34:01] [cifar10c.py:  242]: epoch 1 error % [contrast1]: 5.88%
[22/08/21 18:34:02] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6231s
[22/08/21 18:36:48] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.0258s
[22/08/21 18:36:48] [cifar10c.py:  242]: epoch 2 error % [contrast1]: 5.94%
[22/08/21 18:36:48] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5593s
[22/08/21 18:39:34] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.1733s
[22/08/21 18:39:34] [cifar10c.py:  242]: epoch 3 error % [contrast1]: 5.92%
[22/08/21 18:39:34] [cifar10c.py:  184]: resetting model
[22/08/21 18:39:34] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 18:39:35] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5542s
[22/08/21 18:42:21] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.9842s
[22/08/21 18:42:21] [cifar10c.py:  242]: epoch 1 error % [contrast2]: 6.52%
[22/08/21 18:42:21] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5262s
[22/08/21 18:45:07] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.744s
[22/08/21 18:45:07] [cifar10c.py:  242]: epoch 2 error % [contrast2]: 6.52%
[22/08/21 18:45:08] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5208s
[22/08/21 18:47:53] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.2993s
[22/08/21 18:47:53] [cifar10c.py:  242]: epoch 3 error % [contrast2]: 6.55%
[22/08/21 18:47:53] [cifar10c.py:  184]: resetting model
[22/08/21 18:47:53] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 18:47:54] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5196s
[22/08/21 18:50:39] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.3014s
[22/08/21 18:50:39] [cifar10c.py:  242]: epoch 1 error % [contrast3]: 7.26%
[22/08/21 18:50:39] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5355s
[22/08/21 18:53:25] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.3016s
[22/08/21 18:53:25] [cifar10c.py:  242]: epoch 2 error % [contrast3]: 7.18%
[22/08/21 18:53:25] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.536s
[22/08/21 18:56:11] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.2866s
[22/08/21 18:56:11] [cifar10c.py:  242]: epoch 3 error % [contrast3]: 7.28%
[22/08/21 18:56:11] [cifar10c.py:  184]: resetting model
[22/08/21 18:56:11] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 18:56:11] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.541s
[22/08/21 18:58:56] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.3095s
[22/08/21 18:58:56] [cifar10c.py:  242]: epoch 1 error % [contrast4]: 8.16%
[22/08/21 18:58:57] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5339s
[22/08/21 19:01:42] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.3132s
[22/08/21 19:01:42] [cifar10c.py:  242]: epoch 2 error % [contrast4]: 8.00%
[22/08/21 19:01:43] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5582s
[22/08/21 19:04:28] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.3045s
[22/08/21 19:04:28] [cifar10c.py:  242]: epoch 3 error % [contrast4]: 8.07%
[22/08/21 19:04:28] [cifar10c.py:  184]: resetting model
[22/08/21 19:04:28] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 19:04:29] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5531s
[22/08/21 19:07:14] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.3343s
[22/08/21 19:07:14] [cifar10c.py:  242]: epoch 1 error % [contrast5]: 11.69%
[22/08/21 19:07:15] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5328s
[22/08/21 19:10:00] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.3385s
[22/08/21 19:10:00] [cifar10c.py:  242]: epoch 2 error % [contrast5]: 11.71%
[22/08/21 19:10:00] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5652s
[22/08/21 19:12:46] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.2791s
[22/08/21 19:12:46] [cifar10c.py:  242]: epoch 3 error % [contrast5]: 12.17%
