[22/08/21 16:44:39] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 16:44:39] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 100
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 0
  TYPE: ['shot_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: tent_CIFAR100C_100_22-08-21_164439_978831_shot.txt
LOG_TIME: 22-08-21_164439_978831
MODEL:
  ADAPTATION: tent
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 3
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 16:44:47] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.9576s
[22/08/21 16:44:47] [cifar10c.py:  161]: test-time adaptation: TENT
[22/08/21 16:44:47] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 16:44:47] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 16:44:47] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0003
    weight_decay: 0.0
)
[22/08/21 16:44:47] [cifar10c.py:  184]: resetting model
[22/08/21 16:44:47] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0035s
[22/08/21 16:44:49] [cifar10c.py:  229]: OOD_TIME: loading ood data took 1.0577s
[22/08/21 16:47:34] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.9251s
[22/08/21 16:47:34] [cifar10c.py:  242]: epoch 1 error % [shot_noise1]: 9.35%
[22/08/21 16:47:35] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5628s
[22/08/21 16:50:20] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.1618s
[22/08/21 16:50:20] [cifar10c.py:  242]: epoch 2 error % [shot_noise1]: 8.93%
[22/08/21 16:50:21] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5511s
[22/08/21 16:53:06] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.2021s
[22/08/21 16:53:06] [cifar10c.py:  242]: epoch 3 error % [shot_noise1]: 8.90%
[22/08/21 16:53:06] [cifar10c.py:  184]: resetting model
[22/08/21 16:53:06] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0042s
[22/08/21 16:53:06] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5222s
[22/08/21 16:55:52] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.1494s
[22/08/21 16:55:52] [cifar10c.py:  242]: epoch 1 error % [shot_noise2]: 11.48%
[22/08/21 16:55:52] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.543s
[22/08/21 16:58:37] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.2231s
[22/08/21 16:58:37] [cifar10c.py:  242]: epoch 2 error % [shot_noise2]: 11.03%
[22/08/21 16:58:38] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6184s
[22/08/21 17:01:23] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.1756s
[22/08/21 17:01:23] [cifar10c.py:  242]: epoch 3 error % [shot_noise2]: 10.81%
[22/08/21 17:01:23] [cifar10c.py:  184]: resetting model
[22/08/21 17:01:23] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0045s
[22/08/21 17:01:24] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6192s
[22/08/21 17:04:09] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.1796s
[22/08/21 17:04:09] [cifar10c.py:  242]: epoch 1 error % [shot_noise3]: 17.55%
[22/08/21 17:04:10] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6003s
[22/08/21 17:06:55] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.1903s
[22/08/21 17:06:55] [cifar10c.py:  242]: epoch 2 error % [shot_noise3]: 16.77%
[22/08/21 17:06:55] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5952s
[22/08/21 17:09:41] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.1476s
[22/08/21 17:09:41] [cifar10c.py:  242]: epoch 3 error % [shot_noise3]: 16.79%
[22/08/21 17:09:41] [cifar10c.py:  184]: resetting model
[22/08/21 17:09:41] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0042s
[22/08/21 17:09:41] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6009s
[22/08/21 17:12:26] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.1881s
[22/08/21 17:12:26] [cifar10c.py:  242]: epoch 1 error % [shot_noise4]: 19.21%
[22/08/21 17:12:27] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.575s
[22/08/21 17:15:12] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.2124s
[22/08/21 17:15:12] [cifar10c.py:  242]: epoch 2 error % [shot_noise4]: 18.53%
[22/08/21 17:15:13] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5604s
[22/08/21 17:17:58] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.2835s
[22/08/21 17:17:58] [cifar10c.py:  242]: epoch 3 error % [shot_noise4]: 18.09%
[22/08/21 17:17:58] [cifar10c.py:  184]: resetting model
[22/08/21 17:17:58] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0042s
[22/08/21 17:17:59] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5742s
[22/08/21 17:20:44] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.3309s
[22/08/21 17:20:44] [cifar10c.py:  242]: epoch 1 error % [shot_noise5]: 23.57%
[22/08/21 17:20:45] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7845s
[22/08/21 17:23:30] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.4s
[22/08/21 17:23:30] [cifar10c.py:  242]: epoch 2 error % [shot_noise5]: 22.48%
[22/08/21 17:23:31] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.8226s
[22/08/21 17:26:16] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 165.3723s
[22/08/21 17:26:16] [cifar10c.py:  242]: epoch 3 error % [shot_noise5]: 21.98%
