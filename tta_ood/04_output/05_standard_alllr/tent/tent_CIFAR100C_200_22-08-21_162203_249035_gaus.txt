[22/08/21 16:22:03] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 16:22:03] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 200
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 0
  TYPE: ['gaussian_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: tent_CIFAR100C_200_22-08-21_162203_249035_gaus.txt
LOG_TIME: 22-08-21_162203_249035
MODEL:
  ADAPTATION: tent
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 3
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 16:22:10] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.3165s
[22/08/21 16:22:10] [cifar10c.py:  161]: test-time adaptation: TENT
[22/08/21 16:22:10] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 16:22:10] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 16:22:10] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0003
    weight_decay: 0.0
)
[22/08/21 16:22:10] [cifar10c.py:  184]: resetting model
[22/08/21 16:22:10] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0042s
[22/08/21 16:22:11] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7807s
[22/08/21 16:25:55] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.3681s
[22/08/21 16:25:55] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise1]: 11.40%
[22/08/21 16:25:56] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6168s
[22/08/21 16:29:40] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.9606s
[22/08/21 16:29:40] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise1]: 11.29%
[22/08/21 16:29:40] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5838s
[22/08/21 16:33:24] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8945s
[22/08/21 16:33:24] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise1]: 11.34%
[22/08/21 16:33:24] [cifar10c.py:  184]: resetting model
[22/08/21 16:33:24] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 16:33:25] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7078s
[22/08/21 16:37:09] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8537s
[22/08/21 16:37:09] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise2]: 15.78%
[22/08/21 16:37:09] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.623s
[22/08/21 16:40:53] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.832s
[22/08/21 16:40:53] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise2]: 15.55%
[22/08/21 16:40:54] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6227s
[22/08/21 16:44:38] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.839s
[22/08/21 16:44:38] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise2]: 15.38%
[22/08/21 16:44:38] [cifar10c.py:  184]: resetting model
[22/08/21 16:44:38] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 16:44:38] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6313s
[22/08/21 16:48:22] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8756s
[22/08/21 16:48:22] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise3]: 20.73%
[22/08/21 16:48:23] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6362s
[22/08/21 16:52:07] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8721s
[22/08/21 16:52:07] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise3]: 20.25%
[22/08/21 16:52:07] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6269s
[22/08/21 16:55:51] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8891s
[22/08/21 16:55:51] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise3]: 19.87%
[22/08/21 16:55:51] [cifar10c.py:  184]: resetting model
[22/08/21 16:55:51] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 16:55:52] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6365s
[22/08/21 16:59:36] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8575s
[22/08/21 16:59:36] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise4]: 23.07%
[22/08/21 16:59:36] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6236s
[22/08/21 17:03:20] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8273s
[22/08/21 17:03:20] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise4]: 22.40%
[22/08/21 17:03:21] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6322s
[22/08/21 17:07:05] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8203s
[22/08/21 17:07:05] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise4]: 22.08%
[22/08/21 17:07:05] [cifar10c.py:  184]: resetting model
[22/08/21 17:07:05] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 17:07:05] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6242s
[22/08/21 17:10:49] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.9626s
[22/08/21 17:10:49] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise5]: 25.92%
[22/08/21 17:10:50] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.631s
[22/08/21 17:14:34] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.9444s
[22/08/21 17:14:34] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise5]: 25.04%
[22/08/21 17:14:35] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6313s
[22/08/21 17:18:18] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8728s
[22/08/21 17:18:18] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise5]: 24.75%
