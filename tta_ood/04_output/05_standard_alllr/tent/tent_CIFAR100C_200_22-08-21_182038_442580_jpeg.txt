[22/08/21 18:20:38] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 18:20:38] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 200
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 0
  TYPE: ['jpeg_compression']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: tent_CIFAR100C_200_22-08-21_182038_442580_jpeg.txt
LOG_TIME: 22-08-21_182038_442580
MODEL:
  ADAPTATION: tent
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 3
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 18:20:45] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.334s
[22/08/21 18:20:45] [cifar10c.py:  161]: test-time adaptation: TENT
[22/08/21 18:20:45] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 18:20:45] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 18:20:45] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0003
    weight_decay: 0.0
)
[22/08/21 18:20:45] [cifar10c.py:  184]: resetting model
[22/08/21 18:20:45] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0032s
[22/08/21 18:20:46] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.8633s
[22/08/21 18:24:29] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 222.6649s
[22/08/21 18:24:29] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression1]: 13.03%
[22/08/21 18:24:30] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7764s
[22/08/21 18:28:11] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 221.869s
[22/08/21 18:28:11] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression1]: 12.71%
[22/08/21 18:28:12] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.8187s
[22/08/21 18:31:54] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 221.2191s
[22/08/21 18:31:54] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression1]: 12.57%
[22/08/21 18:31:54] [cifar10c.py:  184]: resetting model
[22/08/21 18:31:54] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 18:31:54] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.9057s
[22/08/21 18:35:36] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 221.4965s
[22/08/21 18:35:36] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression2]: 18.22%
[22/08/21 18:35:37] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7389s
[22/08/21 18:39:18] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 221.6703s
[22/08/21 18:39:18] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression2]: 17.81%
[22/08/21 18:39:19] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6762s
[22/08/21 18:43:00] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 220.9276s
[22/08/21 18:43:00] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression2]: 17.53%
[22/08/21 18:43:00] [cifar10c.py:  184]: resetting model
[22/08/21 18:43:00] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 18:43:01] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6735s
[22/08/21 18:46:42] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 221.0294s
[22/08/21 18:46:42] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression3]: 20.07%
[22/08/21 18:46:42] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6738s
[22/08/21 18:50:23] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 220.8796s
[22/08/21 18:50:23] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression3]: 19.59%
[22/08/21 18:50:24] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6833s
[22/08/21 18:54:05] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 220.9295s
[22/08/21 18:54:05] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression3]: 19.51%
[22/08/21 18:54:05] [cifar10c.py:  184]: resetting model
[22/08/21 18:54:05] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0038s
[22/08/21 18:54:06] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6717s
[22/08/21 18:57:46] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 220.9032s
[22/08/21 18:57:46] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression4]: 22.30%
[22/08/21 18:57:47] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6809s
[22/08/21 19:01:28] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 220.9182s
[22/08/21 19:01:28] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression4]: 21.77%
[22/08/21 19:01:29] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6779s
[22/08/21 19:05:10] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 220.8956s
[22/08/21 19:05:10] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression4]: 21.53%
[22/08/21 19:05:10] [cifar10c.py:  184]: resetting model
[22/08/21 19:05:10] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 19:05:10] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6923s
[22/08/21 19:08:51] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 220.9629s
[22/08/21 19:08:51] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression5]: 25.63%
[22/08/21 19:08:52] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6677s
[22/08/21 19:12:33] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 220.8876s
[22/08/21 19:12:33] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression5]: 25.02%
[22/08/21 19:12:33] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6737s
[22/08/21 19:16:14] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 220.8792s
[22/08/21 19:16:14] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression5]: 24.62%
