[22/08/21 16:23:53] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 16:23:53] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 100
  TYPE: ['gaussian_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: tent_SVHN_100_22-08-21_162353_975179_gaus.txt
LOG_TIME: 22-08-21_162353_975179
MODEL:
  ADAPTATION: tent
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 4
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 16:24:01] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.4399s
[22/08/21 16:24:01] [cifar10c.py:  161]: test-time adaptation: TENT
[22/08/21 16:24:01] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 16:24:01] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 16:24:01] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0.0
)
[22/08/21 16:24:01] [cifar10c.py:  184]: resetting model
[22/08/21 16:24:01] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0042s
[22/08/21 16:24:04] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.857s
[22/08/21 16:24:31] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 27.2595s
[22/08/21 16:24:31] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise1]: 13.03%
[22/08/21 16:24:34] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6829s
[22/08/21 16:24:59] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.7602s
[22/08/21 16:25:00] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise1]: 13.01%
[22/08/21 16:25:02] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6447s
[22/08/21 16:25:28] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.8314s
[22/08/21 16:25:28] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise1]: 12.92%
[22/08/21 16:25:31] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6806s
[22/08/21 16:25:57] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.8412s
[22/08/21 16:25:57] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise1]: 12.54%
[22/08/21 16:25:57] [cifar10c.py:  184]: resetting model
[22/08/21 16:25:57] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 16:25:59] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6569s
[22/08/21 16:26:25] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.8566s
[22/08/21 16:26:25] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise2]: 16.94%
[22/08/21 16:26:28] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6086s
[22/08/21 16:26:53] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.8572s
[22/08/21 16:26:53] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise2]: 15.82%
[22/08/21 16:26:56] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6972s
[22/08/21 16:27:22] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.9323s
[22/08/21 16:27:22] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise2]: 15.57%
[22/08/21 16:27:25] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6518s
[22/08/21 16:27:51] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.878s
[22/08/21 16:27:51] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise2]: 15.53%
[22/08/21 16:27:51] [cifar10c.py:  184]: resetting model
[22/08/21 16:27:51] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 16:27:53] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6765s
[22/08/21 16:28:19] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.9248s
[22/08/21 16:28:19] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise3]: 22.49%
[22/08/21 16:28:22] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.0579s
[22/08/21 16:28:48] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.8868s
[22/08/21 16:28:48] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise3]: 22.24%
[22/08/21 16:28:51] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6779s
[22/08/21 16:29:17] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.8792s
[22/08/21 16:29:17] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise3]: 21.78%
[22/08/21 16:29:19] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6778s
[22/08/21 16:29:45] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.8892s
[22/08/21 16:29:45] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise3]: 21.57%
[22/08/21 16:29:45] [cifar10c.py:  184]: resetting model
[22/08/21 16:29:45] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 16:29:48] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6201s
[22/08/21 16:30:14] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.9223s
[22/08/21 16:30:14] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise4]: 26.54%
[22/08/21 16:30:17] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7232s
[22/08/21 16:30:43] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.9113s
[22/08/21 16:30:43] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise4]: 25.92%
[22/08/21 16:30:45] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8166s
[22/08/21 16:31:11] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.8591s
[22/08/21 16:31:11] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise4]: 25.20%
[22/08/21 16:31:15] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.476s
[22/08/21 16:31:41] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.8444s
[22/08/21 16:31:41] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise4]: 25.68%
[22/08/21 16:31:41] [cifar10c.py:  184]: resetting model
[22/08/21 16:31:41] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 16:31:43] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.783s
[22/08/21 16:32:09] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.939s
[22/08/21 16:32:09] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise5]: 29.93%
[22/08/21 16:32:12] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6459s
[22/08/21 16:32:38] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.8544s
[22/08/21 16:32:38] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise5]: 28.69%
[22/08/21 16:32:41] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7936s
[22/08/21 16:33:06] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.8568s
[22/08/21 16:33:06] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise5]: 28.73%
[22/08/21 16:33:09] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6335s
[22/08/21 16:33:35] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 25.8524s
[22/08/21 16:33:35] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise5]: 28.58%
