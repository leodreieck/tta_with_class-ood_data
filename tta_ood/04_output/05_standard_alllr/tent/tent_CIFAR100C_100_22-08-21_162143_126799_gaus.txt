[22/08/21 16:21:43] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 16:21:43] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 100
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 0
  TYPE: ['gaussian_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: tent_CIFAR100C_100_22-08-21_162143_126799_gaus.txt
LOG_TIME: 22-08-21_162143_126799
MODEL:
  ADAPTATION: tent
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 3
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 16:21:52] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 9.6462s
[22/08/21 16:21:52] [cifar10c.py:  161]: test-time adaptation: TENT
[22/08/21 16:21:52] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 16:21:52] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 16:21:52] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0003
    weight_decay: 0.0
)
[22/08/21 16:21:52] [cifar10c.py:  184]: resetting model
[22/08/21 16:21:52] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0048s
[22/08/21 16:21:53] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5468s
[22/08/21 16:24:37] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.6737s
[22/08/21 16:24:37] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise1]: 11.28%
[22/08/21 16:24:37] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5731s
[22/08/21 16:27:21] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.5029s
[22/08/21 16:27:21] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise1]: 10.88%
[22/08/21 16:27:21] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5613s
[22/08/21 16:30:05] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.4983s
[22/08/21 16:30:05] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise1]: 10.91%
[22/08/21 16:30:05] [cifar10c.py:  184]: resetting model
[22/08/21 16:30:05] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0044s
[22/08/21 16:30:05] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5995s
[22/08/21 16:32:49] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.5102s
[22/08/21 16:32:49] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise2]: 15.70%
[22/08/21 16:32:49] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5497s
[22/08/21 16:35:33] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.5688s
[22/08/21 16:35:33] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise2]: 15.14%
[22/08/21 16:35:33] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5528s
[22/08/21 16:38:17] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.5262s
[22/08/21 16:38:17] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise2]: 14.92%
[22/08/21 16:38:17] [cifar10c.py:  184]: resetting model
[22/08/21 16:38:17] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0044s
[22/08/21 16:38:18] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5507s
[22/08/21 16:41:01] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.5838s
[22/08/21 16:41:01] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise3]: 20.58%
[22/08/21 16:41:02] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5431s
[22/08/21 16:43:45] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.5001s
[22/08/21 16:43:45] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise3]: 20.13%
[22/08/21 16:43:46] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5503s
[22/08/21 16:46:29] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.5601s
[22/08/21 16:46:29] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise3]: 19.63%
[22/08/21 16:46:29] [cifar10c.py:  184]: resetting model
[22/08/21 16:46:29] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0043s
[22/08/21 16:46:30] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5485s
[22/08/21 16:49:13] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.5629s
[22/08/21 16:49:13] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise4]: 23.21%
[22/08/21 16:49:14] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5558s
[22/08/21 16:51:57] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.526s
[22/08/21 16:51:57] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise4]: 22.42%
[22/08/21 16:51:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5567s
[22/08/21 16:54:41] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.4288s
[22/08/21 16:54:41] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise4]: 21.71%
[22/08/21 16:54:41] [cifar10c.py:  184]: resetting model
[22/08/21 16:54:41] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 16:54:42] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5546s
[22/08/21 16:57:26] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.4785s
[22/08/21 16:57:26] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise5]: 25.96%
[22/08/21 16:57:26] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.545s
[22/08/21 17:00:10] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.5114s
[22/08/21 17:00:10] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise5]: 24.77%
[22/08/21 17:00:10] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5459s
[22/08/21 17:02:54] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 163.4907s
[22/08/21 17:02:54] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise5]: 24.07%
