[22/08/21 13:38:29] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 13:38:29] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 100
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 0
  TYPE: ['gaussian_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: hardpl_CIFAR100C_100_22-08-21_133829_897064_gaus.txt
LOG_TIME: 22-08-21_133829_897064
MODEL:
  ADAPTATION: hardpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 4
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 13:38:40] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 10.1538s
[22/08/21 13:38:40] [cifar10c.py:  168]: test-time adaptation: HARDPL
[22/08/21 13:38:40] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 13:38:40] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 13:38:40] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0003
    weight_decay: 0.0
)
[22/08/21 13:38:40] [cifar10c.py:  184]: resetting model
[22/08/21 13:38:40] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0034s
[22/08/21 13:38:40] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.8707s
[22/08/21 13:41:28] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 167.7803s
[22/08/21 13:41:28] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise1]: 11.72%
[22/08/21 13:41:29] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5357s
[22/08/21 13:44:16] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.7801s
[22/08/21 13:44:16] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise1]: 11.40%
[22/08/21 13:44:16] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5348s
[22/08/21 13:47:03] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.793s
[22/08/21 13:47:03] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise1]: 11.57%
[22/08/21 13:47:03] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5234s
[22/08/21 13:49:50] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.8108s
[22/08/21 13:49:50] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise1]: 11.47%
[22/08/21 13:49:50] [cifar10c.py:  184]: resetting model
[22/08/21 13:49:50] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 13:49:51] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5422s
[22/08/21 13:52:38] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 167.1929s
[22/08/21 13:52:38] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise2]: 16.24%
[22/08/21 13:52:38] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5169s
[22/08/21 13:55:25] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.7677s
[22/08/21 13:55:25] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise2]: 15.92%
[22/08/21 13:55:26] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5358s
[22/08/21 13:58:13] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.8878s
[22/08/21 13:58:13] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise2]: 15.82%
[22/08/21 13:58:13] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5372s
[22/08/21 14:01:00] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.9949s
[22/08/21 14:01:00] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise2]: 15.77%
[22/08/21 14:01:00] [cifar10c.py:  184]: resetting model
[22/08/21 14:01:00] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0042s
[22/08/21 14:01:01] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5485s
[22/08/21 14:03:48] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.8805s
[22/08/21 14:03:48] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise3]: 21.22%
[22/08/21 14:03:48] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5397s
[22/08/21 14:06:35] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.7916s
[22/08/21 14:06:35] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise3]: 20.83%
[22/08/21 14:06:35] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5252s
[22/08/21 14:09:22] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.8134s
[22/08/21 14:09:22] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise3]: 20.79%
[22/08/21 14:09:23] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5272s
[22/08/21 14:12:10] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.7914s
[22/08/21 14:12:10] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise3]: 20.79%
[22/08/21 14:12:10] [cifar10c.py:  184]: resetting model
[22/08/21 14:12:10] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 14:12:10] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5233s
[22/08/21 14:14:57] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.9267s
[22/08/21 14:14:57] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise4]: 23.99%
[22/08/21 14:14:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5355s
[22/08/21 14:17:44] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.8214s
[22/08/21 14:17:44] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise4]: 23.42%
[22/08/21 14:17:45] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5182s
[22/08/21 14:20:32] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.7807s
[22/08/21 14:20:32] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise4]: 23.44%
[22/08/21 14:20:32] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.523s
[22/08/21 14:23:19] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.8568s
[22/08/21 14:23:19] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise4]: 22.88%
[22/08/21 14:23:19] [cifar10c.py:  184]: resetting model
[22/08/21 14:23:19] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 14:23:20] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5225s
[22/08/21 14:26:07] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.8854s
[22/08/21 14:26:07] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise5]: 27.13%
[22/08/21 14:26:07] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5265s
[22/08/21 14:28:54] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.8426s
[22/08/21 14:28:54] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise5]: 26.68%
[22/08/21 14:28:54] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5222s
[22/08/21 14:31:41] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 166.8862s
[22/08/21 14:31:41] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise5]: 26.35%
[22/08/21 14:31:42] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5231s
[22/08/21 14:34:29] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 167.0349s
[22/08/21 14:34:29] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise5]: 25.95%
