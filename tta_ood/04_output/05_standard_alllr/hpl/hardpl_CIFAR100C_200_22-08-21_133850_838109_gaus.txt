[22/08/21 13:38:50] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 13:38:50] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 200
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 0
  TYPE: ['gaussian_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: hardpl_CIFAR100C_200_22-08-21_133850_838109_gaus.txt
LOG_TIME: 22-08-21_133850_838109
MODEL:
  ADAPTATION: hardpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 4
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 13:38:58] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.8806s
[22/08/21 13:38:58] [cifar10c.py:  168]: test-time adaptation: HARDPL
[22/08/21 13:38:58] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 13:38:58] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 13:38:58] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0003
    weight_decay: 0.0
)
[22/08/21 13:38:58] [cifar10c.py:  184]: resetting model
[22/08/21 13:38:58] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0034s
[22/08/21 13:38:59] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5936s
[22/08/21 13:42:44] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 225.2652s
[22/08/21 13:42:44] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise1]: 11.80%
[22/08/21 13:42:45] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5857s
[22/08/21 13:46:29] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.249s
[22/08/21 13:46:29] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise1]: 11.64%
[22/08/21 13:46:30] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5798s
[22/08/21 13:50:14] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.2785s
[22/08/21 13:50:14] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise1]: 11.60%
[22/08/21 13:50:14] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5699s
[22/08/21 13:53:59] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.2295s
[22/08/21 13:53:59] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise1]: 11.62%
[22/08/21 13:53:59] [cifar10c.py:  184]: resetting model
[22/08/21 13:53:59] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 13:53:59] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5737s
[22/08/21 13:57:44] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.2751s
[22/08/21 13:57:44] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise2]: 16.34%
[22/08/21 13:57:44] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5957s
[22/08/21 14:01:28] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.3545s
[22/08/21 14:01:28] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise2]: 16.26%
[22/08/21 14:01:29] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5821s
[22/08/21 14:05:13] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.2416s
[22/08/21 14:05:13] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise2]: 16.19%
[22/08/21 14:05:14] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6098s
[22/08/21 14:08:58] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.2733s
[22/08/21 14:08:58] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise2]: 16.15%
[22/08/21 14:08:58] [cifar10c.py:  184]: resetting model
[22/08/21 14:08:58] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 14:08:59] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5835s
[22/08/21 14:12:43] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.2559s
[22/08/21 14:12:43] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise3]: 21.52%
[22/08/21 14:12:44] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6013s
[22/08/21 14:16:28] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.3035s
[22/08/21 14:16:28] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise3]: 20.92%
[22/08/21 14:16:29] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5738s
[22/08/21 14:20:13] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.252s
[22/08/21 14:20:13] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise3]: 21.20%
[22/08/21 14:20:13] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5882s
[22/08/21 14:23:58] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.2714s
[22/08/21 14:23:58] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise3]: 21.26%
[22/08/21 14:23:58] [cifar10c.py:  184]: resetting model
[22/08/21 14:23:58] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 14:23:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5923s
[22/08/21 14:27:43] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.2877s
[22/08/21 14:27:43] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise4]: 24.35%
[22/08/21 14:27:43] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5586s
[22/08/21 14:31:27] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.2396s
[22/08/21 14:31:27] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise4]: 23.89%
[22/08/21 14:31:28] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5795s
[22/08/21 14:35:12] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.3581s
[22/08/21 14:35:12] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise4]: 23.69%
[22/08/21 14:35:13] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.5817s
[22/08/21 14:38:57] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.3016s
[22/08/21 14:38:57] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise4]: 23.41%
[22/08/21 14:38:57] [cifar10c.py:  184]: resetting model
[22/08/21 14:38:57] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0042s
[22/08/21 14:38:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6349s
[22/08/21 14:42:42] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.2069s
[22/08/21 14:42:42] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise5]: 27.50%
[22/08/21 14:42:43] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6047s
[22/08/21 14:46:27] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.2431s
[22/08/21 14:46:27] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise5]: 26.78%
[22/08/21 14:46:27] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.6105s
[22/08/21 14:50:12] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.1287s
[22/08/21 14:50:12] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise5]: 26.71%
[22/08/21 14:50:12] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.616s
[22/08/21 14:53:56] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.2575s
[22/08/21 14:53:56] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise5]: 26.83%
