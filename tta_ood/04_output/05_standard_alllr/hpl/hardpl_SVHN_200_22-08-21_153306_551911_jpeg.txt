[22/08/21 15:33:06] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 15:33:06] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 200
  TYPE: ['jpeg_compression']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: hardpl_SVHN_200_22-08-21_153306_551911_jpeg.txt
LOG_TIME: 22-08-21_153306_551911
MODEL:
  ADAPTATION: hardpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 5
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 15:33:14] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.7566s
[22/08/21 15:33:14] [cifar10c.py:  168]: test-time adaptation: HARDPL
[22/08/21 15:33:14] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 15:33:14] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 15:33:14] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0.0
)
[22/08/21 15:33:14] [cifar10c.py:  184]: resetting model
[22/08/21 15:33:14] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0035s
[22/08/21 15:33:17] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.9128s
[22/08/21 15:33:53] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 36.5798s
[22/08/21 15:33:53] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression1]: 18.86%
[22/08/21 15:33:56] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7664s
[22/08/21 15:34:31] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1181s
[22/08/21 15:34:31] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression1]: 17.26%
[22/08/21 15:34:34] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.207s
[22/08/21 15:35:10] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2725s
[22/08/21 15:35:10] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression1]: 17.25%
[22/08/21 15:35:12] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7863s
[22/08/21 15:35:48] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3879s
[22/08/21 15:35:48] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression1]: 16.98%
[22/08/21 15:35:51] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7534s
[22/08/21 15:36:26] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.4065s
[22/08/21 15:36:26] [cifar10c.py:  242]: epoch 5 error % [jpeg_compression1]: 16.73%
[22/08/21 15:36:26] [cifar10c.py:  184]: resetting model
[22/08/21 15:36:26] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 15:36:29] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8326s
[22/08/21 15:37:04] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.4489s
[22/08/21 15:37:04] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression2]: 26.05%
[22/08/21 15:37:07] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.799s
[22/08/21 15:37:43] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5109s
[22/08/21 15:37:43] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression2]: 25.85%
[22/08/21 15:37:45] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7535s
[22/08/21 15:38:21] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5362s
[22/08/21 15:38:21] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression2]: 25.24%
[22/08/21 15:38:24] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7421s
[22/08/21 15:38:59] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5381s
[22/08/21 15:38:59] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression2]: 24.92%
[22/08/21 15:39:02] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8241s
[22/08/21 15:39:38] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5269s
[22/08/21 15:39:38] [cifar10c.py:  242]: epoch 5 error % [jpeg_compression2]: 24.39%
[22/08/21 15:39:38] [cifar10c.py:  184]: resetting model
[22/08/21 15:39:38] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 15:39:40] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7531s
[22/08/21 15:40:16] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5395s
[22/08/21 15:40:16] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression3]: 30.12%
[22/08/21 15:40:19] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.9758s
[22/08/21 15:40:54] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5397s
[22/08/21 15:40:54] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression3]: 30.15%
[22/08/21 15:40:57] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.878s
[22/08/21 15:41:33] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5251s
[22/08/21 15:41:33] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression3]: 28.68%
[22/08/21 15:41:36] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8786s
[22/08/21 15:42:11] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5392s
[22/08/21 15:42:11] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression3]: 28.03%
[22/08/21 15:42:15] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.3656s
[22/08/21 15:42:50] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5167s
[22/08/21 15:42:50] [cifar10c.py:  242]: epoch 5 error % [jpeg_compression3]: 28.09%
[22/08/21 15:42:50] [cifar10c.py:  184]: resetting model
[22/08/21 15:42:50] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 15:42:53] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6938s
[22/08/21 15:43:28] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5244s
[22/08/21 15:43:28] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression4]: 30.87%
[22/08/21 15:43:31] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7309s
[22/08/21 15:44:07] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.4904s
[22/08/21 15:44:07] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression4]: 28.87%
[22/08/21 15:44:10] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.5247s
[22/08/21 15:44:46] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.4764s
[22/08/21 15:44:46] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression4]: 27.99%
[22/08/21 15:44:49] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8637s
[22/08/21 15:45:24] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.4787s
[22/08/21 15:45:24] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression4]: 29.04%
[22/08/21 15:45:27] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7252s
[22/08/21 15:46:02] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.4854s
[22/08/21 15:46:02] [cifar10c.py:  242]: epoch 5 error % [jpeg_compression4]: 28.39%
[22/08/21 15:46:02] [cifar10c.py:  184]: resetting model
[22/08/21 15:46:02] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 15:46:06] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.7429s
[22/08/21 15:46:42] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.4736s
[22/08/21 15:46:42] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression5]: 35.90%
[22/08/21 15:46:44] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8988s
[22/08/21 15:47:20] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5424s
[22/08/21 15:47:20] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression5]: 34.36%
[22/08/21 15:47:23] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.3577s
[22/08/21 15:47:59] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8589s
[22/08/21 15:47:59] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression5]: 34.40%
[22/08/21 15:48:02] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8236s
[22/08/21 15:48:37] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.4838s
[22/08/21 15:48:37] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression5]: 33.79%
[22/08/21 15:48:40] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7893s
[22/08/21 15:49:16] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.4747s
[22/08/21 15:49:16] [cifar10c.py:  242]: epoch 5 error % [jpeg_compression5]: 34.15%
