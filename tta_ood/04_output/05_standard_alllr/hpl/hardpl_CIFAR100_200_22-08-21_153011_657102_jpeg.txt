[22/08/21 15:30:11] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 15:30:11] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 200
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 0
  TYPE: ['jpeg_compression']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: hardpl_CIFAR100_200_22-08-21_153011_657102_jpeg.txt
LOG_TIME: 22-08-21_153011_657102
MODEL:
  ADAPTATION: hardpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 4
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 15:30:19] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.7969s
[22/08/21 15:30:19] [cifar10c.py:  168]: test-time adaptation: HARDPL
[22/08/21 15:30:19] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 15:30:19] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 15:30:19] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0003
    weight_decay: 0.0
)
[22/08/21 15:30:19] [cifar10c.py:  184]: resetting model
[22/08/21 15:30:19] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0034s
[22/08/21 15:30:23] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.5615s
[22/08/21 15:31:00] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 37.4245s
[22/08/21 15:31:00] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression1]: 13.76%
[22/08/21 15:31:03] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6371s
[22/08/21 15:31:38] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.6441s
[22/08/21 15:31:38] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression1]: 13.73%
[22/08/21 15:31:41] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.64s
[22/08/21 15:32:17] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.7841s
[22/08/21 15:32:17] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression1]: 13.65%
[22/08/21 15:32:19] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6134s
[22/08/21 15:32:55] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8076s
[22/08/21 15:32:55] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression1]: 13.60%
[22/08/21 15:32:55] [cifar10c.py:  184]: resetting model
[22/08/21 15:32:55] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 15:32:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6807s
[22/08/21 15:33:34] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.794s
[22/08/21 15:33:34] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression2]: 19.78%
[22/08/21 15:33:37] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.4172s
[22/08/21 15:34:13] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8013s
[22/08/21 15:34:13] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression2]: 19.33%
[22/08/21 15:34:15] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.5854s
[22/08/21 15:34:51] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8277s
[22/08/21 15:34:51] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression2]: 19.43%
[22/08/21 15:34:54] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.614s
[22/08/21 15:35:30] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8215s
[22/08/21 15:35:30] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression2]: 19.41%
[22/08/21 15:35:30] [cifar10c.py:  184]: resetting model
[22/08/21 15:35:30] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 15:35:33] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.0696s
[22/08/21 15:36:09] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.809s
[22/08/21 15:36:09] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression3]: 21.45%
[22/08/21 15:36:11] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7233s
[22/08/21 15:36:47] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8814s
[22/08/21 15:36:47] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression3]: 20.91%
[22/08/21 15:36:51] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.3683s
[22/08/21 15:37:26] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8353s
[22/08/21 15:37:26] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression3]: 21.12%
[22/08/21 15:37:29] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7028s
[22/08/21 15:38:05] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8888s
[22/08/21 15:38:05] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression3]: 20.69%
[22/08/21 15:38:05] [cifar10c.py:  184]: resetting model
[22/08/21 15:38:05] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 15:38:08] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7021s
[22/08/21 15:38:43] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.7797s
[22/08/21 15:38:43] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression4]: 24.30%
[22/08/21 15:38:46] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6401s
[22/08/21 15:39:22] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8035s
[22/08/21 15:39:22] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression4]: 24.12%
[22/08/21 15:39:25] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6544s
[22/08/21 15:40:00] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.7953s
[22/08/21 15:40:00] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression4]: 23.60%
[22/08/21 15:40:03] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.5871s
[22/08/21 15:40:39] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.867s
[22/08/21 15:40:39] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression4]: 23.46%
[22/08/21 15:40:39] [cifar10c.py:  184]: resetting model
[22/08/21 15:40:39] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0042s
[22/08/21 15:40:41] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6391s
[22/08/21 15:41:17] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8489s
[22/08/21 15:41:17] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression5]: 27.84%
[22/08/21 15:41:20] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6675s
[22/08/21 15:41:56] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8572s
[22/08/21 15:41:56] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression5]: 27.30%
[22/08/21 15:41:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6732s
[22/08/21 15:42:34] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8493s
[22/08/21 15:42:34] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression5]: 27.10%
[22/08/21 15:42:38] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.1883s
[22/08/21 15:43:13] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8616s
[22/08/21 15:43:13] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression5]: 26.88%
