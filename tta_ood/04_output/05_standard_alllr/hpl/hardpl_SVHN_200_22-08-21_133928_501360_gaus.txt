[22/08/21 13:39:28] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 13:39:28] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 200
  TYPE: ['gaussian_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: hardpl_SVHN_200_22-08-21_133928_501360_gaus.txt
LOG_TIME: 22-08-21_133928_501360
MODEL:
  ADAPTATION: hardpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 5
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 13:39:36] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 8.0511s
[22/08/21 13:39:36] [cifar10c.py:  168]: test-time adaptation: HARDPL
[22/08/21 13:39:36] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 13:39:36] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 13:39:36] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0.0
)
[22/08/21 13:39:36] [cifar10c.py:  184]: resetting model
[22/08/21 13:39:36] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0034s
[22/08/21 13:39:40] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.4748s
[22/08/21 13:40:16] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 36.734s
[22/08/21 13:40:16] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise1]: 19.21%
[22/08/21 13:40:19] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7853s
[22/08/21 13:40:54] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0066s
[22/08/21 13:40:54] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise1]: 18.80%
[22/08/21 13:40:57] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.766s
[22/08/21 13:41:32] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2713s
[22/08/21 13:41:32] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise1]: 17.70%
[22/08/21 13:41:35] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7448s
[22/08/21 13:42:10] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1891s
[22/08/21 13:42:10] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise1]: 16.74%
[22/08/21 13:42:13] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7596s
[22/08/21 13:42:48] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.219s
[22/08/21 13:42:48] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise1]: 16.70%
[22/08/21 13:42:48] [cifar10c.py:  184]: resetting model
[22/08/21 13:42:48] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 13:42:51] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6992s
[22/08/21 13:43:26] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3344s
[22/08/21 13:43:26] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise2]: 27.06%
[22/08/21 13:43:29] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7464s
[22/08/21 13:44:04] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2622s
[22/08/21 13:44:04] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise2]: 27.11%
[22/08/21 13:44:07] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6952s
[22/08/21 13:44:42] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3022s
[22/08/21 13:44:42] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise2]: 25.31%
[22/08/21 13:44:45] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7005s
[22/08/21 13:45:20] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3923s
[22/08/21 13:45:20] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise2]: 25.96%
[22/08/21 13:45:23] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7133s
[22/08/21 13:45:58] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.4281s
[22/08/21 13:45:58] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise2]: 25.61%
[22/08/21 13:45:58] [cifar10c.py:  184]: resetting model
[22/08/21 13:45:58] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 13:46:01] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6773s
[22/08/21 13:46:36] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3484s
[22/08/21 13:46:36] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise3]: 30.77%
[22/08/21 13:46:39] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7189s
[22/08/21 13:47:14] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3524s
[22/08/21 13:47:14] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise3]: 30.26%
[22/08/21 13:47:17] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6244s
[22/08/21 13:47:52] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3491s
[22/08/21 13:47:52] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise3]: 29.56%
[22/08/21 13:47:55] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.9654s
[22/08/21 13:48:31] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3786s
[22/08/21 13:48:31] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise3]: 29.17%
[22/08/21 13:48:33] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6914s
[22/08/21 13:49:09] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3514s
[22/08/21 13:49:09] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise3]: 29.13%
[22/08/21 13:49:09] [cifar10c.py:  184]: resetting model
[22/08/21 13:49:09] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 13:49:12] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7042s
[22/08/21 13:49:47] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3691s
[22/08/21 13:49:47] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise4]: 32.89%
[22/08/21 13:49:50] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8577s
[22/08/21 13:50:25] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3152s
[22/08/21 13:50:25] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise4]: 31.63%
[22/08/21 13:50:28] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7537s
[22/08/21 13:51:03] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3153s
[22/08/21 13:51:03] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise4]: 31.24%
[22/08/21 13:51:06] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8983s
[22/08/21 13:51:41] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3807s
[22/08/21 13:51:41] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise4]: 31.78%
[22/08/21 13:51:44] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.9565s
[22/08/21 13:52:20] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3514s
[22/08/21 13:52:20] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise4]: 31.89%
[22/08/21 13:52:20] [cifar10c.py:  184]: resetting model
[22/08/21 13:52:20] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 13:52:22] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7345s
[22/08/21 13:52:58] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.322s
[22/08/21 13:52:58] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise5]: 39.69%
[22/08/21 13:53:01] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.9608s
[22/08/21 13:53:36] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3735s
[22/08/21 13:53:36] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise5]: 39.92%
[22/08/21 13:53:39] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7215s
[22/08/21 13:54:14] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2875s
[22/08/21 13:54:14] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise5]: 39.02%
[22/08/21 13:54:17] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7296s
[22/08/21 13:54:52] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3318s
[22/08/21 13:54:52] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise5]: 39.36%
[22/08/21 13:54:56] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.6781s
[22/08/21 13:55:31] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3579s
[22/08/21 13:55:31] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise5]: 39.16%
