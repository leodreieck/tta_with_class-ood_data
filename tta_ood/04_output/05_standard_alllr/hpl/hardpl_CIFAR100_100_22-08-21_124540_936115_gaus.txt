[22/08/21 12:45:40] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 12:45:40] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 100
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 0
  TYPE: ['gaussian_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: hardpl_CIFAR100_100_22-08-21_124540_936115_gaus.txt
LOG_TIME: 22-08-21_124540_936115
MODEL:
  ADAPTATION: hardpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 4
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 12:45:48] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.879s
[22/08/21 12:45:48] [cifar10c.py:  168]: test-time adaptation: HARDPL
[22/08/21 12:45:48] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 12:45:48] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 12:45:48] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0003
    weight_decay: 0.0
)
[22/08/21 12:45:48] [cifar10c.py:  184]: resetting model
[22/08/21 12:45:48] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0033s
[22/08/21 12:45:51] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7065s
[22/08/21 12:46:20] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.6374s
[22/08/21 12:46:20] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise1]: 12.20%
[22/08/21 12:46:22] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6339s
[22/08/21 12:46:52] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.3496s
[22/08/21 12:46:52] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise1]: 11.62%
[22/08/21 12:46:54] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.5475s
[22/08/21 12:47:24] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.2973s
[22/08/21 12:47:24] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise1]: 11.64%
[22/08/21 12:47:26] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.58s
[22/08/21 12:47:56] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.7349s
[22/08/21 12:47:56] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise1]: 11.45%
[22/08/21 12:47:56] [cifar10c.py:  184]: resetting model
[22/08/21 12:47:56] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 12:47:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6213s
[22/08/21 12:48:28] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.8515s
[22/08/21 12:48:28] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise2]: 16.89%
[22/08/21 12:48:31] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.578s
[22/08/21 12:49:01] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.905s
[22/08/21 12:49:01] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise2]: 16.74%
[22/08/21 12:49:03] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6126s
[22/08/21 12:49:34] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.2715s
[22/08/21 12:49:34] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise2]: 16.32%
[22/08/21 12:49:36] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6364s
[22/08/21 12:50:08] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 31.2236s
[22/08/21 12:50:08] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise2]: 16.41%
[22/08/21 12:50:08] [cifar10c.py:  184]: resetting model
[22/08/21 12:50:08] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 12:50:10] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6167s
[22/08/21 12:50:40] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.1484s
[22/08/21 12:50:40] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise3]: 21.96%
[22/08/21 12:50:43] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6123s
[22/08/21 12:51:13] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.0847s
[22/08/21 12:51:13] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise3]: 21.68%
[22/08/21 12:51:16] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.579s
[22/08/21 12:51:46] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.0553s
[22/08/21 12:51:46] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise3]: 21.14%
[22/08/21 12:51:48] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6434s
[22/08/21 12:52:18] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.0948s
[22/08/21 12:52:18] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise3]: 20.96%
[22/08/21 12:52:18] [cifar10c.py:  184]: resetting model
[22/08/21 12:52:18] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 12:52:21] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.608s
[22/08/21 12:52:51] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.1083s
[22/08/21 12:52:51] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise4]: 24.81%
[22/08/21 12:52:54] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.5553s
[22/08/21 12:53:24] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.2201s
[22/08/21 12:53:24] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise4]: 24.61%
[22/08/21 12:53:27] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6081s
[22/08/21 12:53:57] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.1764s
[22/08/21 12:53:57] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise4]: 24.33%
[22/08/21 12:54:00] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.0074s
[22/08/21 12:54:30] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.0989s
[22/08/21 12:54:30] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise4]: 24.07%
[22/08/21 12:54:30] [cifar10c.py:  184]: resetting model
[22/08/21 12:54:30] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 12:54:32] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.636s
[22/08/21 12:55:02] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.032s
[22/08/21 12:55:02] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise5]: 28.17%
[22/08/21 12:55:05] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.5285s
[22/08/21 12:55:35] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.2341s
[22/08/21 12:55:35] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise5]: 27.78%
[22/08/21 12:55:38] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.5782s
[22/08/21 12:56:08] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.1976s
[22/08/21 12:56:08] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise5]: 27.43%
[22/08/21 12:56:11] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.5792s
[22/08/21 12:56:41] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.15s
[22/08/21 12:56:41] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise5]: 26.90%
