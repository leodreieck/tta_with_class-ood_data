[22/08/21 19:06:00] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 19:06:00] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 200
  TYPE: ['gaussian_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: gce_SVHN_200_22-08-21_190600_109296_gaus.txt
LOG_TIME: 22-08-21_190600_109296
MODEL:
  ADAPTATION: gce
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.8
N_EPOCHS: 5
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 19:06:08] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.9622s
[22/08/21 19:06:08] [cifar10c.py:  164]: test-time adaptation: GCE
[22/08/21 19:06:08] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 19:06:08] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 19:06:08] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0.0
)
[22/08/21 19:06:08] [cifar10c.py:  184]: resetting model
[22/08/21 19:06:08] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0035s
[22/08/21 19:06:10] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8115s
[22/08/21 19:06:47] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 36.643s
[22/08/21 19:06:47] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise1]: 17.85%
[22/08/21 19:06:50] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.0134s
[22/08/21 19:07:25] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2992s
[22/08/21 19:07:25] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise1]: 15.97%
[22/08/21 19:07:28] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6901s
[22/08/21 19:08:03] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3409s
[22/08/21 19:08:03] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise1]: 15.28%
[22/08/21 19:08:06] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7525s
[22/08/21 19:08:42] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.349s
[22/08/21 19:08:42] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise1]: 14.16%
[22/08/21 19:08:44] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7802s
[22/08/21 19:09:20] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3537s
[22/08/21 19:09:20] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise1]: 14.29%
[22/08/21 19:09:20] [cifar10c.py:  184]: resetting model
[22/08/21 19:09:20] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0042s
[22/08/21 19:09:22] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7207s
[22/08/21 19:09:58] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3543s
[22/08/21 19:09:58] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise2]: 28.01%
[22/08/21 19:10:00] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7112s
[22/08/21 19:10:36] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3721s
[22/08/21 19:10:36] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise2]: 27.31%
[22/08/21 19:10:39] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7957s
[22/08/21 19:11:14] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3827s
[22/08/21 19:11:14] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise2]: 27.16%
[22/08/21 19:11:17] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7069s
[22/08/21 19:11:52] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3856s
[22/08/21 19:11:52] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise2]: 27.20%
[22/08/21 19:11:55] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8911s
[22/08/21 19:12:30] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.365s
[22/08/21 19:12:30] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise2]: 26.89%
[22/08/21 19:12:30] [cifar10c.py:  184]: resetting model
[22/08/21 19:12:30] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 19:12:33] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7655s
[22/08/21 19:13:08] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3813s
[22/08/21 19:13:08] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise3]: 30.77%
[22/08/21 19:13:11] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7352s
[22/08/21 19:13:47] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3509s
[22/08/21 19:13:47] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise3]: 29.33%
[22/08/21 19:13:49] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7809s
[22/08/21 19:14:25] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3762s
[22/08/21 19:14:25] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise3]: 28.74%
[22/08/21 19:14:28] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.9828s
[22/08/21 19:15:03] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3447s
[22/08/21 19:15:03] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise3]: 28.63%
[22/08/21 19:15:06] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.652s
[22/08/21 19:15:41] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3733s
[22/08/21 19:15:41] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise3]: 28.50%
[22/08/21 19:15:41] [cifar10c.py:  184]: resetting model
[22/08/21 19:15:41] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 19:15:44] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8972s
[22/08/21 19:16:19] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3716s
[22/08/21 19:16:19] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise4]: 32.41%
[22/08/21 19:16:22] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7846s
[22/08/21 19:16:58] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3993s
[22/08/21 19:16:58] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise4]: 30.93%
[22/08/21 19:17:00] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6979s
[22/08/21 19:17:36] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3655s
[22/08/21 19:17:36] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise4]: 30.36%
[22/08/21 19:17:38] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7797s
[22/08/21 19:18:14] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.4058s
[22/08/21 19:18:14] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise4]: 29.77%
[22/08/21 19:18:17] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.0982s
[22/08/21 19:18:52] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3552s
[22/08/21 19:18:52] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise4]: 30.19%
[22/08/21 19:18:52] [cifar10c.py:  184]: resetting model
[22/08/21 19:18:52] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 19:18:55] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7569s
[22/08/21 19:19:30] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3764s
[22/08/21 19:19:30] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise5]: 39.44%
[22/08/21 19:19:33] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7379s
[22/08/21 19:20:09] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3711s
[22/08/21 19:20:09] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise5]: 39.17%
[22/08/21 19:20:11] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7727s
[22/08/21 19:20:47] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3346s
[22/08/21 19:20:47] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise5]: 38.59%
[22/08/21 19:20:49] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7209s
[22/08/21 19:21:25] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3671s
[22/08/21 19:21:25] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise5]: 38.87%
[22/08/21 19:21:27] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7526s
[22/08/21 19:22:03] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.3385s
[22/08/21 19:22:03] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise5]: 39.74%
