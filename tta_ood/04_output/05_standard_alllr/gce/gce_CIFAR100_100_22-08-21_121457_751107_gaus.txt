[22/08/21 12:14:57] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 12:14:57] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 100
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 0
  TYPE: ['gaussian_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: gce_CIFAR100_100_22-08-21_121457_751107_gaus.txt
LOG_TIME: 22-08-21_121457_751107
MODEL:
  ADAPTATION: gce
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.8
N_EPOCHS: 4
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 12:15:05] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.3486s
[22/08/21 12:15:05] [cifar10c.py:  164]: test-time adaptation: GCE
[22/08/21 12:15:05] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 12:15:05] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 12:15:05] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0003
    weight_decay: 0.0
)
[22/08/21 12:15:05] [cifar10c.py:  184]: resetting model
[22/08/21 12:15:05] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0035s
[22/08/21 12:15:07] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.269s
[22/08/21 12:15:36] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.1032s
[22/08/21 12:15:36] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise1]: 12.20%
[22/08/21 12:15:38] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.107s
[22/08/21 12:16:07] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.5549s
[22/08/21 12:16:07] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise1]: 11.87%
[22/08/21 12:16:09] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2429s
[22/08/21 12:16:38] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.6561s
[22/08/21 12:16:38] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise1]: 11.73%
[22/08/21 12:16:40] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.1908s
[22/08/21 12:17:08] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.678s
[22/08/21 12:17:08] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise1]: 11.52%
[22/08/21 12:17:08] [cifar10c.py:  184]: resetting model
[22/08/21 12:17:08] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 12:17:11] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3527s
[22/08/21 12:17:39] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.6763s
[22/08/21 12:17:39] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise2]: 16.89%
[22/08/21 12:17:42] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2004s
[22/08/21 12:18:10] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.7425s
[22/08/21 12:18:10] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise2]: 16.66%
[22/08/21 12:18:13] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.323s
[22/08/21 12:18:42] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.855s
[22/08/21 12:18:42] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise2]: 16.31%
[22/08/21 12:18:44] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2558s
[22/08/21 12:19:13] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.7316s
[22/08/21 12:19:13] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise2]: 16.25%
[22/08/21 12:19:13] [cifar10c.py:  184]: resetting model
[22/08/21 12:19:13] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 12:19:15] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3646s
[22/08/21 12:19:44] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.7099s
[22/08/21 12:19:44] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise3]: 21.84%
[22/08/21 12:19:46] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3028s
[22/08/21 12:20:15] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.7178s
[22/08/21 12:20:15] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise3]: 21.34%
[22/08/21 12:20:17] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.407s
[22/08/21 12:20:46] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.707s
[22/08/21 12:20:46] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise3]: 20.99%
[22/08/21 12:20:48] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3184s
[22/08/21 12:21:17] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.7205s
[22/08/21 12:21:17] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise3]: 20.72%
[22/08/21 12:21:17] [cifar10c.py:  184]: resetting model
[22/08/21 12:21:17] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 12:21:19] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2755s
[22/08/21 12:21:48] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.7118s
[22/08/21 12:21:48] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise4]: 24.73%
[22/08/21 12:21:50] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.281s
[22/08/21 12:22:19] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.7375s
[22/08/21 12:22:19] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise4]: 24.59%
[22/08/21 12:22:21] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3s
[22/08/21 12:22:50] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.636s
[22/08/21 12:22:50] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise4]: 24.18%
[22/08/21 12:22:52] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2693s
[22/08/21 12:23:21] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.763s
[22/08/21 12:23:21] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise4]: 23.89%
[22/08/21 12:23:21] [cifar10c.py:  184]: resetting model
[22/08/21 12:23:21] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0042s
[22/08/21 12:23:23] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2929s
[22/08/21 12:23:52] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.6773s
[22/08/21 12:23:52] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise5]: 28.05%
[22/08/21 12:23:54] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3137s
[22/08/21 12:24:23] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.6729s
[22/08/21 12:24:23] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise5]: 27.57%
[22/08/21 12:24:25] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3687s
[22/08/21 12:24:54] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.682s
[22/08/21 12:24:54] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise5]: 27.04%
[22/08/21 12:24:56] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.5474s
[22/08/21 12:25:25] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.6659s
[22/08/21 12:25:25] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise5]: 26.70%
