[22/08/21 19:11:15] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 19:11:15] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 200
  SVHN_samples: 0
  TYPE: ['gaussian_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: gce_SVHNC_200_22-08-21_191114_986839_gaus.txt
LOG_TIME: 22-08-21_191114_986839
MODEL:
  ADAPTATION: gce
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.8
N_EPOCHS: 4
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 19:11:22] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.7696s
[22/08/21 19:11:22] [cifar10c.py:  164]: test-time adaptation: GCE
[22/08/21 19:11:22] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 19:11:22] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 19:11:22] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0.0
)
[22/08/21 19:11:22] [cifar10c.py:  184]: resetting model
[22/08/21 19:11:22] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0034s
[22/08/21 19:11:24] [cifar10c.py:  229]: OOD_TIME: loading ood data took 1.2321s
[22/08/21 19:15:08] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.4548s
[22/08/21 19:15:08] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise1]: 13.79%
[22/08/21 19:15:09] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7808s
[22/08/21 19:18:53] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8851s
[22/08/21 19:18:53] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise1]: 13.47%
[22/08/21 19:18:53] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7637s
[22/08/21 19:22:37] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.9067s
[22/08/21 19:22:37] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise1]: 13.48%
[22/08/21 19:22:38] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7521s
[22/08/21 19:26:22] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.9047s
[22/08/21 19:26:22] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise1]: 13.58%
[22/08/21 19:26:22] [cifar10c.py:  184]: resetting model
[22/08/21 19:26:22] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 19:26:23] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.8808s
[22/08/21 19:30:07] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8839s
[22/08/21 19:30:07] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise2]: 18.23%
[22/08/21 19:30:08] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7573s
[22/08/21 19:33:51] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8532s
[22/08/21 19:33:51] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise2]: 18.26%
[22/08/21 19:33:52] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7483s
[22/08/21 19:37:36] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 224.2143s
[22/08/21 19:37:36] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise2]: 18.12%
[22/08/21 19:37:37] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.759s
[22/08/21 19:41:21] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8849s
[22/08/21 19:41:21] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise2]: 18.27%
[22/08/21 19:41:21] [cifar10c.py:  184]: resetting model
[22/08/21 19:41:21] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 19:41:22] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.9529s
[22/08/21 19:45:06] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.7619s
[22/08/21 19:45:06] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise3]: 23.56%
[22/08/21 19:45:07] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7401s
[22/08/21 19:48:50] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.7178s
[22/08/21 19:48:50] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise3]: 23.35%
[22/08/21 19:48:51] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7508s
[22/08/21 19:52:35] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.8695s
[22/08/21 19:52:35] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise3]: 23.03%
[22/08/21 19:52:36] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7457s
[22/08/21 19:56:19] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.843s
[22/08/21 19:56:19] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise3]: 22.79%
[22/08/21 19:56:19] [cifar10c.py:  184]: resetting model
[22/08/21 19:56:19] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 19:56:20] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7973s
[22/08/21 20:00:04] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.673s
[22/08/21 20:00:04] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise4]: 24.83%
[22/08/21 20:00:05] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7354s
[22/08/21 20:03:48] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.6578s
[22/08/21 20:03:48] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise4]: 24.66%
[22/08/21 20:03:49] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7381s
[22/08/21 20:07:33] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.6904s
[22/08/21 20:07:33] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise4]: 24.66%
[22/08/21 20:07:33] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7383s
[22/08/21 20:11:17] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.6889s
[22/08/21 20:11:17] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise4]: 24.37%
[22/08/21 20:11:17] [cifar10c.py:  184]: resetting model
[22/08/21 20:11:17] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 20:11:18] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.748s
[22/08/21 20:15:02] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.707s
[22/08/21 20:15:02] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise5]: 27.72%
[22/08/21 20:15:02] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7074s
[22/08/21 20:18:46] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.6593s
[22/08/21 20:18:46] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise5]: 27.32%
[22/08/21 20:18:47] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7547s
[22/08/21 20:22:31] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.6527s
[22/08/21 20:22:31] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise5]: 27.37%
[22/08/21 20:22:32] [cifar10c.py:  229]: OOD_TIME: loading ood data took 0.7858s
[22/08/21 20:26:15] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 223.5944s
[22/08/21 20:26:15] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise5]: 27.38%
