[22/08/21 12:47:48] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 12:47:48] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 200
  TYPE: ['impulse_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: softpl_SVHN_200_22-08-21_124748_380332_impu.txt
LOG_TIME: 22-08-21_124748_380332
MODEL:
  ADAPTATION: softpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 3
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 12:47:59] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 10.6521s
[22/08/21 12:47:59] [cifar10c.py:  171]: test-time adaptation: SOFTPL
[22/08/21 12:47:59] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 12:47:59] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 12:47:59] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0.0
)
[22/08/21 12:47:59] [cifar10c.py:  184]: resetting model
[22/08/21 12:47:59] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0034s
[22/08/21 12:48:01] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.4355s
[22/08/21 12:48:38] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 36.8302s
[22/08/21 12:48:38] [cifar10c.py:  242]: epoch 1 error % [impulse_noise1]: 19.57%
[22/08/21 12:48:40] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3087s
[22/08/21 12:49:15] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0547s
[22/08/21 12:49:15] [cifar10c.py:  242]: epoch 2 error % [impulse_noise1]: 18.79%
[22/08/21 12:49:18] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.5211s
[22/08/21 12:49:53] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.283s
[22/08/21 12:49:53] [cifar10c.py:  242]: epoch 3 error % [impulse_noise1]: 18.48%
[22/08/21 12:49:53] [cifar10c.py:  184]: resetting model
[22/08/21 12:49:53] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 12:49:55] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3286s
[22/08/21 12:50:31] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2106s
[22/08/21 12:50:31] [cifar10c.py:  242]: epoch 1 error % [impulse_noise2]: 26.53%
[22/08/21 12:50:33] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3702s
[22/08/21 12:51:08] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.137s
[22/08/21 12:51:08] [cifar10c.py:  242]: epoch 2 error % [impulse_noise2]: 26.82%
[22/08/21 12:51:10] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.364s
[22/08/21 12:51:45] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0747s
[22/08/21 12:51:45] [cifar10c.py:  242]: epoch 3 error % [impulse_noise2]: 26.65%
[22/08/21 12:51:45] [cifar10c.py:  184]: resetting model
[22/08/21 12:51:45] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 12:51:48] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3454s
[22/08/21 12:52:23] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1191s
[22/08/21 12:52:23] [cifar10c.py:  242]: epoch 1 error % [impulse_noise3]: 31.91%
[22/08/21 12:52:25] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3765s
[22/08/21 12:53:00] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1164s
[22/08/21 12:53:00] [cifar10c.py:  242]: epoch 2 error % [impulse_noise3]: 32.43%
[22/08/21 12:53:03] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3632s
[22/08/21 12:53:38] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0835s
[22/08/21 12:53:38] [cifar10c.py:  242]: epoch 3 error % [impulse_noise3]: 33.35%
[22/08/21 12:53:38] [cifar10c.py:  184]: resetting model
[22/08/21 12:53:38] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 12:53:40] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3711s
[22/08/21 12:54:15] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1127s
[22/08/21 12:54:15] [cifar10c.py:  242]: epoch 1 error % [impulse_noise4]: 40.27%
[22/08/21 12:54:18] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3776s
[22/08/21 12:54:53] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0659s
[22/08/21 12:54:53] [cifar10c.py:  242]: epoch 2 error % [impulse_noise4]: 40.42%
[22/08/21 12:54:55] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.4828s
[22/08/21 12:55:30] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1192s
[22/08/21 12:55:30] [cifar10c.py:  242]: epoch 3 error % [impulse_noise4]: 40.57%
[22/08/21 12:55:30] [cifar10c.py:  184]: resetting model
[22/08/21 12:55:30] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 12:55:33] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3431s
[22/08/21 12:56:08] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1113s
[22/08/21 12:56:08] [cifar10c.py:  242]: epoch 1 error % [impulse_noise5]: 45.48%
[22/08/21 12:56:10] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3298s
[22/08/21 12:56:45] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0652s
[22/08/21 12:56:45] [cifar10c.py:  242]: epoch 2 error % [impulse_noise5]: 45.31%
[22/08/21 12:56:48] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3764s
[22/08/21 12:57:23] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0948s
[22/08/21 12:57:23] [cifar10c.py:  242]: epoch 3 error % [impulse_noise5]: 45.31%
