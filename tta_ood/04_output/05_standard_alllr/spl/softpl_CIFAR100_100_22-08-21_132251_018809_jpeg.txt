[22/08/21 13:22:51] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 13:22:51] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 100
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 0
  TYPE: ['jpeg_compression']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: softpl_CIFAR100_100_22-08-21_132251_018809_jpeg.txt
LOG_TIME: 22-08-21_132251_018809
MODEL:
  ADAPTATION: softpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 4
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 13:22:58] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.782s
[22/08/21 13:22:58] [cifar10c.py:  171]: test-time adaptation: SOFTPL
[22/08/21 13:22:58] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 13:22:58] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 13:22:58] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.003
    weight_decay: 0.0
)
[22/08/21 13:22:58] [cifar10c.py:  184]: resetting model
[22/08/21 13:22:58] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0034s
[22/08/21 13:23:01] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7263s
[22/08/21 13:23:32] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.6657s
[22/08/21 13:23:32] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression1]: 13.01%
[22/08/21 13:23:34] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6893s
[22/08/21 13:24:04] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.662s
[22/08/21 13:24:04] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression1]: 12.78%
[22/08/21 13:24:07] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.592s
[22/08/21 13:24:37] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.9056s
[22/08/21 13:24:37] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression1]: 12.42%
[22/08/21 13:24:39] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6566s
[22/08/21 13:25:09] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.9907s
[22/08/21 13:25:09] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression1]: 12.39%
[22/08/21 13:25:09] [cifar10c.py:  184]: resetting model
[22/08/21 13:25:09] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 13:25:12] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6112s
[22/08/21 13:25:42] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.9299s
[22/08/21 13:25:42] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression2]: 18.40%
[22/08/21 13:25:44] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.5987s
[22/08/21 13:26:14] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.0217s
[22/08/21 13:26:14] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression2]: 17.79%
[22/08/21 13:26:17] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.617s
[22/08/21 13:26:47] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.9731s
[22/08/21 13:26:47] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression2]: 17.27%
[22/08/21 13:26:50] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6117s
[22/08/21 13:27:20] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.1847s
[22/08/21 13:27:20] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression2]: 16.78%
[22/08/21 13:27:20] [cifar10c.py:  184]: resetting model
[22/08/21 13:27:20] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 13:27:22] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6461s
[22/08/21 13:27:52] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.0316s
[22/08/21 13:27:52] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression3]: 19.83%
[22/08/21 13:27:55] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.612s
[22/08/21 13:28:25] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.9789s
[22/08/21 13:28:25] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression3]: 18.99%
[22/08/21 13:28:28] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6259s
[22/08/21 13:28:58] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.0117s
[22/08/21 13:28:58] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression3]: 18.37%
[22/08/21 13:29:00] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6711s
[22/08/21 13:29:30] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.1004s
[22/08/21 13:29:30] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression3]: 18.00%
[22/08/21 13:29:30] [cifar10c.py:  184]: resetting model
[22/08/21 13:29:30] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 13:29:33] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6431s
[22/08/21 13:30:03] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.1224s
[22/08/21 13:30:03] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression4]: 21.94%
[22/08/21 13:30:06] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6049s
[22/08/21 13:30:36] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.9593s
[22/08/21 13:30:36] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression4]: 21.32%
[22/08/21 13:30:38] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6729s
[22/08/21 13:31:09] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.0934s
[22/08/21 13:31:09] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression4]: 21.16%
[22/08/21 13:31:11] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6157s
[22/08/21 13:31:41] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.0871s
[22/08/21 13:31:41] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression4]: 20.75%
[22/08/21 13:31:41] [cifar10c.py:  184]: resetting model
[22/08/21 13:31:41] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 13:31:44] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.5959s
[22/08/21 13:32:14] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 30.1443s
[22/08/21 13:32:14] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression5]: 26.03%
[22/08/21 13:32:17] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.2133s
[22/08/21 13:32:47] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.9281s
[22/08/21 13:32:47] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression5]: 25.11%
[22/08/21 13:32:50] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.0372s
[22/08/21 13:33:20] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.9663s
[22/08/21 13:33:20] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression5]: 23.99%
[22/08/21 13:33:23] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6653s
[22/08/21 13:33:53] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 29.9753s
[22/08/21 13:33:53] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression5]: 23.24%
