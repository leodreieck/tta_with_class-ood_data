[22/08/21 13:28:51] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 13:28:51] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 200
  TYPE: ['contrast']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: softpl_SVHN_200_22-08-21_132851_158056_cont.txt
LOG_TIME: 22-08-21_132851_158056
MODEL:
  ADAPTATION: softpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 3
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 13:29:01] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 9.9374s
[22/08/21 13:29:01] [cifar10c.py:  171]: test-time adaptation: SOFTPL
[22/08/21 13:29:01] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 13:29:01] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 13:29:01] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0.0
)
[22/08/21 13:29:01] [cifar10c.py:  184]: resetting model
[22/08/21 13:29:01] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0034s
[22/08/21 13:29:04] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.1044s
[22/08/21 13:29:40] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 36.429s
[22/08/21 13:29:40] [cifar10c.py:  242]: epoch 1 error % [contrast1]: 8.85%
[22/08/21 13:29:43] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7278s
[22/08/21 13:30:18] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.642s
[22/08/21 13:30:18] [cifar10c.py:  242]: epoch 2 error % [contrast1]: 8.63%
[22/08/21 13:30:20] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8476s
[22/08/21 13:30:55] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.6532s
[22/08/21 13:30:55] [cifar10c.py:  242]: epoch 3 error % [contrast1]: 8.32%
[22/08/21 13:30:55] [cifar10c.py:  184]: resetting model
[22/08/21 13:30:55] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 13:30:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7075s
[22/08/21 13:31:32] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.666s
[22/08/21 13:31:32] [cifar10c.py:  242]: epoch 1 error % [contrast2]: 9.09%
[22/08/21 13:31:36] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.212s
[22/08/21 13:32:10] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.6251s
[22/08/21 13:32:10] [cifar10c.py:  242]: epoch 2 error % [contrast2]: 9.21%
[22/08/21 13:32:13] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7752s
[22/08/21 13:32:48] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.6226s
[22/08/21 13:32:48] [cifar10c.py:  242]: epoch 3 error % [contrast2]: 9.27%
[22/08/21 13:32:48] [cifar10c.py:  184]: resetting model
[22/08/21 13:32:48] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 13:32:50] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7083s
[22/08/21 13:33:25] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.6961s
[22/08/21 13:33:25] [cifar10c.py:  242]: epoch 1 error % [contrast3]: 9.76%
[22/08/21 13:33:28] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7801s
[22/08/21 13:34:02] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.6392s
[22/08/21 13:34:02] [cifar10c.py:  242]: epoch 2 error % [contrast3]: 9.49%
[22/08/21 13:34:05] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8322s
[22/08/21 13:34:40] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.641s
[22/08/21 13:34:40] [cifar10c.py:  242]: epoch 3 error % [contrast3]: 9.44%
[22/08/21 13:34:40] [cifar10c.py:  184]: resetting model
[22/08/21 13:34:40] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 13:34:43] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6954s
[22/08/21 13:35:17] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.6475s
[22/08/21 13:35:17] [cifar10c.py:  242]: epoch 1 error % [contrast4]: 10.92%
[22/08/21 13:35:20] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7044s
[22/08/21 13:35:55] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.6377s
[22/08/21 13:35:55] [cifar10c.py:  242]: epoch 2 error % [contrast4]: 10.72%
[22/08/21 13:35:57] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6845s
[22/08/21 13:36:32] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.6626s
[22/08/21 13:36:32] [cifar10c.py:  242]: epoch 3 error % [contrast4]: 10.67%
[22/08/21 13:36:32] [cifar10c.py:  184]: resetting model
[22/08/21 13:36:32] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 13:36:35] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7037s
[22/08/21 13:37:09] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.6293s
[22/08/21 13:37:09] [cifar10c.py:  242]: epoch 1 error % [contrast5]: 15.58%
[22/08/21 13:37:12] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7125s
[22/08/21 13:37:47] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.6295s
[22/08/21 13:37:47] [cifar10c.py:  242]: epoch 2 error % [contrast5]: 15.50%
[22/08/21 13:37:50] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8164s
[22/08/21 13:38:24] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.6579s
[22/08/21 13:38:24] [cifar10c.py:  242]: epoch 3 error % [contrast5]: 15.26%
