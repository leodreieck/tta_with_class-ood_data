[22/08/21 12:47:37] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 12:47:37] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 200
  TYPE: ['gaussian_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: softpl_SVHN_200_22-08-21_124737_066280_gaus.txt
LOG_TIME: 22-08-21_124737_066280
MODEL:
  ADAPTATION: softpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 3
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 12:47:44] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.8087s
[22/08/21 12:47:44] [cifar10c.py:  171]: test-time adaptation: SOFTPL
[22/08/21 12:47:44] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 12:47:44] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 12:47:44] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0.0
)
[22/08/21 12:47:44] [cifar10c.py:  184]: resetting model
[22/08/21 12:47:44] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0034s
[22/08/21 12:47:48] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.1925s
[22/08/21 12:48:24] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 36.2704s
[22/08/21 12:48:24] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise1]: 19.07%
[22/08/21 12:48:27] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7155s
[22/08/21 12:49:01] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.5428s
[22/08/21 12:49:01] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise1]: 18.74%
[22/08/21 12:49:05] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.692s
[22/08/21 12:49:40] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.8395s
[22/08/21 12:49:40] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise1]: 18.68%
[22/08/21 12:49:40] [cifar10c.py:  184]: resetting model
[22/08/21 12:49:40] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0046s
[22/08/21 12:49:42] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8232s
[22/08/21 12:50:18] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.6119s
[22/08/21 12:50:18] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise2]: 25.48%
[22/08/21 12:50:21] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7404s
[22/08/21 12:50:56] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.7209s
[22/08/21 12:50:56] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise2]: 25.38%
[22/08/21 12:50:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7156s
[22/08/21 12:51:33] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.7478s
[22/08/21 12:51:33] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise2]: 25.50%
[22/08/21 12:51:33] [cifar10c.py:  184]: resetting model
[22/08/21 12:51:33] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 12:51:36] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8572s
[22/08/21 12:52:11] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.8007s
[22/08/21 12:52:11] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise3]: 31.65%
[22/08/21 12:52:13] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7901s
[22/08/21 12:52:48] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.7287s
[22/08/21 12:52:48] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise3]: 31.54%
[22/08/21 12:52:51] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7676s
[22/08/21 12:53:26] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.8808s
[22/08/21 12:53:26] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise3]: 31.68%
[22/08/21 12:53:26] [cifar10c.py:  184]: resetting model
[22/08/21 12:53:26] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 12:53:29] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7608s
[22/08/21 12:54:03] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.7698s
[22/08/21 12:54:03] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise4]: 34.26%
[22/08/21 12:54:06] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.0379s
[22/08/21 12:54:41] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.7988s
[22/08/21 12:54:41] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise4]: 34.43%
[22/08/21 12:54:44] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8667s
[22/08/21 12:55:19] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.8329s
[22/08/21 12:55:19] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise4]: 34.48%
[22/08/21 12:55:19] [cifar10c.py:  184]: resetting model
[22/08/21 12:55:19] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 12:55:22] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.9077s
[22/08/21 12:55:57] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.7297s
[22/08/21 12:55:57] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise5]: 37.91%
[22/08/21 12:55:59] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8873s
[22/08/21 12:56:34] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.7147s
[22/08/21 12:56:34] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise5]: 37.66%
[22/08/21 12:56:37] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7708s
[22/08/21 12:57:12] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.7561s
[22/08/21 12:57:12] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise5]: 37.16%
