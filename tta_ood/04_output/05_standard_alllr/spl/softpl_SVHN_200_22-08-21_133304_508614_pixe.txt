[22/08/21 13:33:04] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 13:33:04] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 200
  TYPE: ['pixelate']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: softpl_SVHN_200_22-08-21_133304_508614_pixe.txt
LOG_TIME: 22-08-21_133304_508614
MODEL:
  ADAPTATION: softpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 3
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 13:33:12] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.9457s
[22/08/21 13:33:12] [cifar10c.py:  171]: test-time adaptation: SOFTPL
[22/08/21 13:33:12] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 13:33:12] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 13:33:12] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0.0
)
[22/08/21 13:33:12] [cifar10c.py:  184]: resetting model
[22/08/21 13:33:12] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0034s
[22/08/21 13:33:15] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8463s
[22/08/21 13:33:51] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 36.5267s
[22/08/21 13:33:51] [cifar10c.py:  242]: epoch 1 error % [pixelate1]: 13.46%
[22/08/21 13:33:54] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.753s
[22/08/21 13:34:29] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.9483s
[22/08/21 13:34:29] [cifar10c.py:  242]: epoch 2 error % [pixelate1]: 13.16%
[22/08/21 13:34:32] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8607s
[22/08/21 13:35:07] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 34.9831s
[22/08/21 13:35:07] [cifar10c.py:  242]: epoch 3 error % [pixelate1]: 13.26%
[22/08/21 13:35:07] [cifar10c.py:  184]: resetting model
[22/08/21 13:35:07] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 13:35:10] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8238s
[22/08/21 13:35:45] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.013s
[22/08/21 13:35:45] [cifar10c.py:  242]: epoch 1 error % [pixelate2]: 17.42%
[22/08/21 13:35:48] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7566s
[22/08/21 13:36:23] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.033s
[22/08/21 13:36:23] [cifar10c.py:  242]: epoch 2 error % [pixelate2]: 17.24%
[22/08/21 13:36:25] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8423s
[22/08/21 13:37:00] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0804s
[22/08/21 13:37:00] [cifar10c.py:  242]: epoch 3 error % [pixelate2]: 17.14%
[22/08/21 13:37:00] [cifar10c.py:  184]: resetting model
[22/08/21 13:37:00] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 13:37:03] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7496s
[22/08/21 13:37:38] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0428s
[22/08/21 13:37:38] [cifar10c.py:  242]: epoch 1 error % [pixelate3]: 19.89%
[22/08/21 13:37:41] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7177s
[22/08/21 13:38:16] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0735s
[22/08/21 13:38:16] [cifar10c.py:  242]: epoch 2 error % [pixelate3]: 19.92%
[22/08/21 13:38:19] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.837s
[22/08/21 13:38:54] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0557s
[22/08/21 13:38:54] [cifar10c.py:  242]: epoch 3 error % [pixelate3]: 19.62%
[22/08/21 13:38:54] [cifar10c.py:  184]: resetting model
[22/08/21 13:38:54] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 13:38:57] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.0856s
[22/08/21 13:39:32] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0458s
[22/08/21 13:39:32] [cifar10c.py:  242]: epoch 1 error % [pixelate4]: 25.64%
[22/08/21 13:39:35] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7573s
[22/08/21 13:40:10] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1039s
[22/08/21 13:40:10] [cifar10c.py:  242]: epoch 2 error % [pixelate4]: 25.98%
[22/08/21 13:40:13] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7868s
[22/08/21 13:40:48] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0725s
[22/08/21 13:40:48] [cifar10c.py:  242]: epoch 3 error % [pixelate4]: 26.23%
[22/08/21 13:40:48] [cifar10c.py:  184]: resetting model
[22/08/21 13:40:48] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 13:40:51] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7181s
[22/08/21 13:41:26] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1003s
[22/08/21 13:41:26] [cifar10c.py:  242]: epoch 1 error % [pixelate5]: 33.95%
[22/08/21 13:41:28] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7814s
[22/08/21 13:42:03] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0702s
[22/08/21 13:42:03] [cifar10c.py:  242]: epoch 2 error % [pixelate5]: 33.91%
[22/08/21 13:42:06] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.9199s
[22/08/21 13:42:41] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.0625s
[22/08/21 13:42:41] [cifar10c.py:  242]: epoch 3 error % [pixelate5]: 33.66%
