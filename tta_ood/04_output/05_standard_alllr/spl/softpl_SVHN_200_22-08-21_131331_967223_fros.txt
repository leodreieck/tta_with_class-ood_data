[22/08/21 13:13:31] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 13:13:31] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 200
  TYPE: ['frost']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: softpl_SVHN_200_22-08-21_131331_967223_fros.txt
LOG_TIME: 22-08-21_131331_967223
MODEL:
  ADAPTATION: softpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 3
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 13:13:39] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.7165s
[22/08/21 13:13:39] [cifar10c.py:  171]: test-time adaptation: SOFTPL
[22/08/21 13:13:39] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 13:13:39] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 13:13:39] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0.0
)
[22/08/21 13:13:39] [cifar10c.py:  184]: resetting model
[22/08/21 13:13:39] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0035s
[22/08/21 13:13:42] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8937s
[22/08/21 13:14:19] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 36.7445s
[22/08/21 13:14:19] [cifar10c.py:  242]: epoch 1 error % [frost1]: 12.70%
[22/08/21 13:14:22] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7513s
[22/08/21 13:14:57] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1899s
[22/08/21 13:14:57] [cifar10c.py:  242]: epoch 2 error % [frost1]: 13.17%
[22/08/21 13:14:59] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.689s
[22/08/21 13:15:35] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2294s
[22/08/21 13:15:35] [cifar10c.py:  242]: epoch 3 error % [frost1]: 13.26%
[22/08/21 13:15:35] [cifar10c.py:  184]: resetting model
[22/08/21 13:15:35] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0043s
[22/08/21 13:15:38] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7922s
[22/08/21 13:16:13] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1915s
[22/08/21 13:16:13] [cifar10c.py:  242]: epoch 1 error % [frost2]: 16.31%
[22/08/21 13:16:15] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7021s
[22/08/21 13:16:51] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1966s
[22/08/21 13:16:51] [cifar10c.py:  242]: epoch 2 error % [frost2]: 16.36%
[22/08/21 13:16:53] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7248s
[22/08/21 13:17:29] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1894s
[22/08/21 13:17:29] [cifar10c.py:  242]: epoch 3 error % [frost2]: 16.41%
[22/08/21 13:17:29] [cifar10c.py:  184]: resetting model
[22/08/21 13:17:29] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 13:17:31] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7153s
[22/08/21 13:18:06] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2125s
[22/08/21 13:18:06] [cifar10c.py:  242]: epoch 1 error % [frost3]: 19.73%
[22/08/21 13:18:09] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7604s
[22/08/21 13:18:44] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1895s
[22/08/21 13:18:44] [cifar10c.py:  242]: epoch 2 error % [frost3]: 20.30%
[22/08/21 13:18:47] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7384s
[22/08/21 13:19:22] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1772s
[22/08/21 13:19:22] [cifar10c.py:  242]: epoch 3 error % [frost3]: 20.25%
[22/08/21 13:19:22] [cifar10c.py:  184]: resetting model
[22/08/21 13:19:22] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 13:19:25] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7034s
[22/08/21 13:20:00] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.199s
[22/08/21 13:20:00] [cifar10c.py:  242]: epoch 1 error % [frost4]: 19.84%
[22/08/21 13:20:03] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7517s
[22/08/21 13:20:38] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1777s
[22/08/21 13:20:38] [cifar10c.py:  242]: epoch 2 error % [frost4]: 19.99%
[22/08/21 13:20:41] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7446s
[22/08/21 13:21:16] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1644s
[22/08/21 13:21:16] [cifar10c.py:  242]: epoch 3 error % [frost4]: 20.10%
[22/08/21 13:21:16] [cifar10c.py:  184]: resetting model
[22/08/21 13:21:16] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 13:21:19] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7205s
[22/08/21 13:21:54] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.186s
[22/08/21 13:21:54] [cifar10c.py:  242]: epoch 1 error % [frost5]: 23.79%
[22/08/21 13:21:57] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7459s
[22/08/21 13:22:32] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1821s
[22/08/21 13:22:32] [cifar10c.py:  242]: epoch 2 error % [frost5]: 24.32%
[22/08/21 13:22:35] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.696s
[22/08/21 13:23:10] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2189s
[22/08/21 13:23:10] [cifar10c.py:  242]: epoch 3 error % [frost5]: 24.41%
