[22/08/21 13:23:14] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 13:23:14] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 200
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 0
  TYPE: ['jpeg_compression']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: softpl_CIFAR100_200_22-08-21_132314_549122_jpeg.txt
LOG_TIME: 22-08-21_132314_549122
MODEL:
  ADAPTATION: softpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 4
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 13:23:22] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.813s
[22/08/21 13:23:22] [cifar10c.py:  171]: test-time adaptation: SOFTPL
[22/08/21 13:23:22] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 13:23:22] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 13:23:22] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.003
    weight_decay: 0.0
)
[22/08/21 13:23:22] [cifar10c.py:  184]: resetting model
[22/08/21 13:23:22] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0034s
[22/08/21 13:23:25] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8676s
[22/08/21 13:24:02] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 36.7569s
[22/08/21 13:24:02] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression1]: 13.38%
[22/08/21 13:24:04] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7629s
[22/08/21 13:24:39] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.1609s
[22/08/21 13:24:39] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression1]: 13.18%
[22/08/21 13:24:42] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6964s
[22/08/21 13:25:17] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2619s
[22/08/21 13:25:17] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression1]: 12.83%
[22/08/21 13:25:20] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.0079s
[22/08/21 13:25:56] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2475s
[22/08/21 13:25:56] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression1]: 12.81%
[22/08/21 13:25:56] [cifar10c.py:  184]: resetting model
[22/08/21 13:25:56] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 13:25:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7532s
[22/08/21 13:26:34] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2516s
[22/08/21 13:26:34] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression2]: 18.80%
[22/08/21 13:26:36] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7065s
[22/08/21 13:27:12] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2221s
[22/08/21 13:27:12] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression2]: 18.45%
[22/08/21 13:27:14] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6927s
[22/08/21 13:27:50] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2271s
[22/08/21 13:27:50] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression2]: 18.41%
[22/08/21 13:27:52] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6434s
[22/08/21 13:28:27] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2298s
[22/08/21 13:28:27] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression2]: 18.35%
[22/08/21 13:28:27] [cifar10c.py:  184]: resetting model
[22/08/21 13:28:27] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0061s
[22/08/21 13:28:30] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6675s
[22/08/21 13:29:05] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2968s
[22/08/21 13:29:05] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression3]: 21.00%
[22/08/21 13:29:08] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.696s
[22/08/21 13:29:43] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2694s
[22/08/21 13:29:43] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression3]: 20.26%
[22/08/21 13:29:46] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7677s
[22/08/21 13:30:21] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2336s
[22/08/21 13:30:21] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression3]: 19.67%
[22/08/21 13:30:24] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6903s
[22/08/21 13:30:59] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2257s
[22/08/21 13:30:59] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression3]: 19.77%
[22/08/21 13:30:59] [cifar10c.py:  184]: resetting model
[22/08/21 13:30:59] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 13:31:02] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7239s
[22/08/21 13:31:37] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2526s
[22/08/21 13:31:37] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression4]: 23.33%
[22/08/21 13:31:40] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7261s
[22/08/21 13:32:15] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2493s
[22/08/21 13:32:15] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression4]: 22.48%
[22/08/21 13:32:18] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7583s
[22/08/21 13:32:53] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2806s
[22/08/21 13:32:53] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression4]: 21.78%
[22/08/21 13:32:56] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8189s
[22/08/21 13:33:31] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.299s
[22/08/21 13:33:31] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression4]: 21.58%
[22/08/21 13:33:31] [cifar10c.py:  184]: resetting model
[22/08/21 13:33:31] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0042s
[22/08/21 13:33:34] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.767s
[22/08/21 13:34:09] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2423s
[22/08/21 13:34:09] [cifar10c.py:  242]: epoch 1 error % [jpeg_compression5]: 27.16%
[22/08/21 13:34:12] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7907s
[22/08/21 13:34:47] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2881s
[22/08/21 13:34:47] [cifar10c.py:  242]: epoch 2 error % [jpeg_compression5]: 25.72%
[22/08/21 13:34:50] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8475s
[22/08/21 13:35:26] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2575s
[22/08/21 13:35:26] [cifar10c.py:  242]: epoch 3 error % [jpeg_compression5]: 24.91%
[22/08/21 13:35:28] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7766s
[22/08/21 13:36:04] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.2521s
[22/08/21 13:36:04] [cifar10c.py:  242]: epoch 4 error % [jpeg_compression5]: 24.48%
