[22/08/21 12:47:47] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 12:47:47] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 200
  TYPE: ['shot_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: softpl_SVHN_200_22-08-21_124747_072078_shot.txt
LOG_TIME: 22-08-21_124747_072078
MODEL:
  ADAPTATION: softpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 3
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 12:47:54] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.8942s
[22/08/21 12:47:54] [cifar10c.py:  171]: test-time adaptation: SOFTPL
[22/08/21 12:47:54] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 12:47:54] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 12:47:54] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0.0
)
[22/08/21 12:47:54] [cifar10c.py:  184]: resetting model
[22/08/21 12:47:54] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0045s
[22/08/21 12:47:57] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8257s
[22/08/21 12:48:34] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 37.1083s
[22/08/21 12:48:34] [cifar10c.py:  242]: epoch 1 error % [shot_noise1]: 16.25%
[22/08/21 12:48:37] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6775s
[22/08/21 12:49:13] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.547s
[22/08/21 12:49:13] [cifar10c.py:  242]: epoch 2 error % [shot_noise1]: 16.03%
[22/08/21 12:49:15] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6964s
[22/08/21 12:49:51] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.9498s
[22/08/21 12:49:51] [cifar10c.py:  242]: epoch 3 error % [shot_noise1]: 16.25%
[22/08/21 12:49:51] [cifar10c.py:  184]: resetting model
[22/08/21 12:49:51] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 12:49:55] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.7157s
[22/08/21 12:50:31] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.8663s
[22/08/21 12:50:31] [cifar10c.py:  242]: epoch 1 error % [shot_noise2]: 20.41%
[22/08/21 12:50:34] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7118s
[22/08/21 12:51:09] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5572s
[22/08/21 12:51:09] [cifar10c.py:  242]: epoch 2 error % [shot_noise2]: 20.38%
[22/08/21 12:51:12] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7087s
[22/08/21 12:51:47] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5693s
[22/08/21 12:51:47] [cifar10c.py:  242]: epoch 3 error % [shot_noise2]: 20.22%
[22/08/21 12:51:47] [cifar10c.py:  184]: resetting model
[22/08/21 12:51:47] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 12:51:50] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.0067s
[22/08/21 12:52:26] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.6029s
[22/08/21 12:52:26] [cifar10c.py:  242]: epoch 1 error % [shot_noise3]: 28.50%
[22/08/21 12:52:29] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6652s
[22/08/21 12:53:04] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5746s
[22/08/21 12:53:04] [cifar10c.py:  242]: epoch 2 error % [shot_noise3]: 28.50%
[22/08/21 12:53:07] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7419s
[22/08/21 12:53:43] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.6126s
[22/08/21 12:53:43] [cifar10c.py:  242]: epoch 3 error % [shot_noise3]: 28.39%
[22/08/21 12:53:43] [cifar10c.py:  184]: resetting model
[22/08/21 12:53:43] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 12:53:46] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.4332s
[22/08/21 12:54:22] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.6171s
[22/08/21 12:54:22] [cifar10c.py:  242]: epoch 1 error % [shot_noise4]: 30.80%
[22/08/21 12:54:24] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.7105s
[22/08/21 12:55:00] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.6459s
[22/08/21 12:55:00] [cifar10c.py:  242]: epoch 2 error % [shot_noise4]: 30.69%
[22/08/21 12:55:03] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.3289s
[22/08/21 12:55:39] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5809s
[22/08/21 12:55:39] [cifar10c.py:  242]: epoch 3 error % [shot_noise4]: 30.55%
[22/08/21 12:55:39] [cifar10c.py:  184]: resetting model
[22/08/21 12:55:39] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0044s
[22/08/21 12:55:42] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6932s
[22/08/21 12:56:17] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.6024s
[22/08/21 12:56:17] [cifar10c.py:  242]: epoch 1 error % [shot_noise5]: 36.14%
[22/08/21 12:56:20] [cifar10c.py:  229]: OOD_TIME: loading ood data took 3.0802s
[22/08/21 12:56:56] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.6051s
[22/08/21 12:56:56] [cifar10c.py:  242]: epoch 2 error % [shot_noise5]: 35.73%
[22/08/21 12:56:59] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.8217s
[22/08/21 12:57:34] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 35.5967s
[22/08/21 12:57:34] [cifar10c.py:  242]: epoch 3 error % [shot_noise5]: 35.82%
