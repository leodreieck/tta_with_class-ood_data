[22/08/21 12:47:35] [conf.py:  244]: PyTorch Version: torch=1.8.1+cu102, cuda=10.2, cudnn=7605
[22/08/21 12:47:35] [conf.py:  246]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: 05_ckpt
CORRUPTION:
  CIFAR100C_samples: 0
  CIFAR100_samples: 0
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [1, 2, 3, 4, 5]
  SVHNC_samples: 0
  SVHN_samples: 100
  TYPE: ['gaussian_noise']
CUDNN:
  BENCHMARK: True
DATA_DIR: 02_data
DESC: 
LOG_DEST: softpl_SVHN_100_22-08-21_124735_246727_gaus.txt
LOG_TIME: 22-08-21_124735_246727
MODEL:
  ADAPTATION: softpl
  ARCH: Standard
  CREATE_EMBEDDINGS: False
  EPISODIC: False
  OOD_METHOD: none
  OOD_THRESHOLD: 0.0
  PL_THRESHOLD: 0.0
N_EPOCHS: 5
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0003
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: 04_output/output_leo
TEST:
  BATCH_SIZE: 200
[22/08/21 12:47:42] [cifar10c.py:  147]: LOADING_TIME: loading cfg and model took 7.3189s
[22/08/21 12:47:42] [cifar10c.py:  171]: test-time adaptation: SOFTPL
[22/08/21 12:47:42] [cifar10c.py:  282]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[22/08/21 12:47:42] [cifar10c.py:  283]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[22/08/21 12:47:42] [cifar10c.py:  284]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0003
    weight_decay: 0.0
)
[22/08/21 12:47:42] [cifar10c.py:  184]: resetting model
[22/08/21 12:47:42] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0034s
[22/08/21 12:47:45] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.4597s
[22/08/21 12:48:13] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 28.8372s
[22/08/21 12:48:14] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise1]: 15.08%
[22/08/21 12:48:17] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.6112s
[22/08/21 12:48:43] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.3556s
[22/08/21 12:48:43] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise1]: 15.17%
[22/08/21 12:48:45] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3019s
[22/08/21 12:49:12] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.508s
[22/08/21 12:49:12] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise1]: 15.10%
[22/08/21 12:49:14] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.332s
[22/08/21 12:49:41] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8687s
[22/08/21 12:49:41] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise1]: 15.04%
[22/08/21 12:49:43] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2595s
[22/08/21 12:50:10] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.9956s
[22/08/21 12:50:10] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise1]: 15.01%
[22/08/21 12:50:10] [cifar10c.py:  184]: resetting model
[22/08/21 12:50:10] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0041s
[22/08/21 12:50:13] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3119s
[22/08/21 12:50:39] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.773s
[22/08/21 12:50:39] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise2]: 20.24%
[22/08/21 12:50:42] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2462s
[22/08/21 12:51:09] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.7724s
[22/08/21 12:51:09] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise2]: 19.92%
[22/08/21 12:51:11] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.321s
[22/08/21 12:51:38] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.772s
[22/08/21 12:51:38] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise2]: 19.94%
[22/08/21 12:51:40] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3986s
[22/08/21 12:52:07] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8039s
[22/08/21 12:52:07] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise2]: 19.76%
[22/08/21 12:52:09] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.5162s
[22/08/21 12:52:36] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8302s
[22/08/21 12:52:36] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise2]: 19.85%
[22/08/21 12:52:36] [cifar10c.py:  184]: resetting model
[22/08/21 12:52:36] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 12:52:38] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.308s
[22/08/21 12:53:05] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8273s
[22/08/21 12:53:05] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise3]: 26.04%
[22/08/21 12:53:08] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2768s
[22/08/21 12:53:34] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.832s
[22/08/21 12:53:34] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise3]: 25.81%
[22/08/21 12:53:37] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2791s
[22/08/21 12:54:04] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8477s
[22/08/21 12:54:04] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise3]: 26.05%
[22/08/21 12:54:06] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3978s
[22/08/21 12:54:33] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8425s
[22/08/21 12:54:33] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise3]: 25.81%
[22/08/21 12:54:35] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2865s
[22/08/21 12:55:02] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8442s
[22/08/21 12:55:02] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise3]: 25.89%
[22/08/21 12:55:02] [cifar10c.py:  184]: resetting model
[22/08/21 12:55:02] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.004s
[22/08/21 12:55:04] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3319s
[22/08/21 12:55:31] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8274s
[22/08/21 12:55:31] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise4]: 28.77%
[22/08/21 12:55:33] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2822s
[22/08/21 12:56:00] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8385s
[22/08/21 12:56:00] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise4]: 28.40%
[22/08/21 12:56:02] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2682s
[22/08/21 12:56:29] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8303s
[22/08/21 12:56:29] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise4]: 28.34%
[22/08/21 12:56:32] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3106s
[22/08/21 12:56:59] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8495s
[22/08/21 12:56:59] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise4]: 28.00%
[22/08/21 12:57:01] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.4344s
[22/08/21 12:57:28] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8301s
[22/08/21 12:57:28] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise4]: 27.86%
[22/08/21 12:57:28] [cifar10c.py:  184]: resetting model
[22/08/21 12:57:28] [cifar10c.py:  189]: RESET_TIME: resetting model took 0.0039s
[22/08/21 12:57:30] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.3093s
[22/08/21 12:57:57] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8583s
[22/08/21 12:57:57] [cifar10c.py:  242]: epoch 1 error % [gaussian_noise5]: 31.86%
[22/08/21 12:57:59] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2839s
[22/08/21 12:58:26] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8594s
[22/08/21 12:58:26] [cifar10c.py:  242]: epoch 2 error % [gaussian_noise5]: 31.54%
[22/08/21 12:58:28] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.269s
[22/08/21 12:58:55] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8452s
[22/08/21 12:58:55] [cifar10c.py:  242]: epoch 3 error % [gaussian_noise5]: 31.76%
[22/08/21 12:58:58] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2869s
[22/08/21 12:59:24] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.832s
[22/08/21 12:59:24] [cifar10c.py:  242]: epoch 4 error % [gaussian_noise5]: 31.60%
[22/08/21 12:59:27] [cifar10c.py:  229]: OOD_TIME: loading ood data took 2.2747s
[22/08/21 12:59:53] [cifar10c.py:  241]: EPOCH_TIME: running epoch took 26.8392s
[22/08/21 12:59:53] [cifar10c.py:  242]: epoch 5 error % [gaussian_noise5]: 31.29%
